{"version":3,"sources":["services/AuthService.js","components/Menus/Drawer.js","components/Menus/Header.js","services/PostService.js","services/Utils.js","components/Posts/Post.js","components/PlaceHolders/Loading.js","components/Home.js","components/Utils/Input.js","components/Authentication/Login.js","components/Authentication/Register.js","components/Authentication/Profile.js","components/Utils/Chip.js","components/Utils/Select.js","components/Posts/PostForm.js","components/Posts/Vote.js","components/CardProfile/DefaultProfileIcon.js","components/CardProfile/CardProfile.js","components/Posts/CommentEditor.js","components/Report.js","components/ToolTip.js","components/Posts/Comment.js","components/PlaceHolders/TextPlaceHolder.js","components/Posts/PostView.js","components/About.js","components/ContactUs.js","components/404.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","document","location","href","slice","AuthService","Login","email","password","a","fetch","headers","method","credentials","body","JSON","stringify","results","ok","console","log","Register","firstName","lastName","Logout","window","sessionStorage","removeItem","Profile","profile","getItem","parse","user","isLogin","json","setItem","FindProfile","uid","data","Drawer","useState","isOpen","setIsOpen","setIsLogin","useEffect","then","className","onClick","style","textAlign","color","padding","to","Header","fontSize","PostService","AddPost","header","brief","description","tags","RemovePost","postId","GetPostById","GetPosts","i","ownerId","Object","keys","length","GetPostsByTags","Error","queryTags","forEach","tag","UpdatePost","id","UpVote","DownVote","ClearVote","GetVote","AddComment","comment","UpdateComment","GetComments","DeleteComment","commentId","SendReport","reason","targetType","targetId","report","Utils","DateFormat","date","formatedDate","Date","getDate","getMonth","getFullYear","Post","post","userId","display","flexDirection","justifyContent","pathname","state","lastModifiedDate","alignItems","marginBottom","votesBalance","marginTop","commentsCount","_id","Loading","Home","posts","setPosts","setProfile","noMoreStyle","setNoMoreStyle","isFetching","fetchPosts","newPosts","height","overflowY","overflowX","onScroll","e","Math","floor","target","scrollHeight","scrollTop","clientHeight","map","Input","getInput","value","isError","error","type","required","width","errorMarginTop","errorMarginLeft","errorColor","errorFontSize","autoComplete","openError","left","top","closeError","errorText","setErrorText","inputStyle","setInputStyle","errorTextStyle","setErrorTextStyle","requiredCheck","onChange","setEmail","setPassword","setIsError","history","useHistory","login","preventDefault","result","push","reload","onSubmit","onKeyDown","key","alignSelf","margin","setFirstName","setLastName","register","details","setDetails","registerDate","Chip","label","deleteChip","Select","options","getChosenOption","optionsList","setOptionsList","labelPosition","setLabelPosition","arrowClass","setArrowClass","optionsClass","setOptionsClass","chosenOption","setChosenOption","optionStyle","setOptionStyle","selectClass","setSelectClass","openOptions","chooseOption","innerText","keyCode","onKeyUp","arr","filter","option","toLowerCase","includes","pointerEvents","PostForm","setHeader","setBrief","setDescription","tagsList","setTagsList","inputValue","setInputValue","maxWidth","Autocomplete","marginLeft","position","index","newList","item","handleDelete","Vote","props","btnClickedStyle","backgroundColor","btnNotClickedStyle","btnUnavailable","cursor","setPost","setVotes","btnUpVote","setBtnUpVote","btnDownVote","setBtnDownVote","vote","upVote","updatedPost","DefaultProfileIcon","name","fixScale","charCodeAt","acronyms","split","x","setBackgroundColor","saturation","calc","lightness","CardProfile","lastActiveAt","toString","CommentEditor","setComment","Report","reportIsOpen","closeReport","from","reportItem","itemId","reportReason","setReportReason","reportText","setReportText","reportStyle","setReportStyle","ToolTip","edit","del","setUser","closeMenu","setReportIsOpen","onMouseLeave","Comment","commentText","setCommentText","isEditing","setIsEditing","setDate","commentStyle","setCommentStyle","lastText","text","ownerProfile","TextPlaceHolder","rows","styleProps","borderRadius","skeleton","PostView","useLocation","useParams","defaultPost","creationDate","__v","author","setAuthor","comments","setComments","isLoadingPost","setIsLoadingPost","loadingStyle","setLoadingStyle","loadComments","concat","undefined","About","ContactUs","NotFoundPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.545cd2d2.chunk.js","sourcesContent":["const baseUrl = document.location.href.slice(0, -1);\r\nconst AuthService = {\r\n\tLogin: async (email, password) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/auth/login', {\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tRegister: async (firstName, lastName, email, password) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/auth/register', {\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfirstName: firstName,\r\n\t\t\t\t\tlastName: lastName,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tLogout: async () => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/auth/logout', {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t});\r\n\t\t\twindow.sessionStorage.removeItem('profile');\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tProfile: async () => {\r\n\t\tconst profile = window.sessionStorage.getItem('profile');\r\n\t\tif (profile) {\r\n\t\t\treturn JSON.parse(profile);\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tlet results = await fetch(baseUrl + '/auth/profile', {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t});\r\n\t\t\t\tconst user = {\r\n\t\t\t\t\tisLogin: results.ok,\r\n\t\t\t\t};\r\n\t\t\t\tif (results.ok) {\r\n\t\t\t\t\tuser.profile = await results.json();\r\n\t\t\t\t\twindow.sessionStorage.setItem('profile', JSON.stringify(user));\r\n\t\t\t\t}\r\n\t\t\t\treturn user;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tFindProfile: async (uid) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/auth/findProfile/${uid}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t});\r\n\t\t\tconst data = await results.json();\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport default AuthService;\r\n","import './Drawer.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\r\nimport AuthService from '../../services/AuthService';\r\n\r\nconst Drawer = () => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\tconst [isLogin, setIsLogin] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\tif (user) setIsLogin(user.isLogin);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='sideBar'>\r\n\t\t\t<div className='sideMenuIcon menuBtn' onClick={() => setIsOpen(true)}>\r\n\t\t\t\t<p></p>\r\n\t\t\t\t<p></p>\r\n\t\t\t\t<p></p>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={isOpen ? 'container open' : 'container closed'}\r\n\t\t\t\tonClick={() => setIsOpen(false)}>\r\n\t\t\t\t<div className={isOpen ? 'navContainer open' : 'navContainer closed'}>\r\n\t\t\t\t\t<h3\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\tcolor: 'var(--quaternary-bg-color)',\r\n\t\t\t\t\t\t\tpadding: '5px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tHome Projects\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div className='navBarList'>\r\n\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/'>\r\n\t\t\t\t\t\t\t<HomeIcon className='icon'></HomeIcon>\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{isLogin && (\r\n\t\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/addProject'>\r\n\t\t\t\t\t\t\t\t<AddBoxIcon className='icon'></AddBoxIcon>\r\n\t\t\t\t\t\t\t\tAdd Project\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/contactUs'>\r\n\t\t\t\t\t\t\t<AlternateEmailIcon className='icon'></AlternateEmailIcon>\r\n\t\t\t\t\t\t\tContact Us\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/about'>\r\n\t\t\t\t\t\t\t<InfoIcon className='icon'></InfoIcon>\r\n\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Drawer;\r\n","import './Header.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport Drawer from './Drawer';\r\n\r\nconst Header = () => {\r\n\tconst [isLogin, setIsLogin] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then((user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tsetIsLogin(user.isLogin);\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<Drawer/>\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<h1>Home Projects</h1>\r\n\t\t\t</Link>\r\n\t\t\t{isLogin ? (\r\n\t\t\t\t<Link to='/profile'>\r\n\t\t\t\t\t<AccountCircleIcon className='menuBtn' fontSize='large'></AccountCircleIcon>\r\n\t\t\t\t</Link>\r\n\t\t\t ) : (\r\n\t\t\t\t<Link to='/login'>\r\n\t\t\t\t\t<LoginIcon fontSize='large' className='menuBtn' ></LoginIcon>\r\n\t\t\t\t</Link>\r\n\t\t\t  )} \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","const baseUrl = document.location.href.slice(0, -1);\r\n\r\nconst PostService = {\r\n\tAddPost: async (header, brief, description, tags) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/posts/addPost', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\theader: header,\r\n\t\t\t\t\tbrief: brief,\r\n\t\t\t\t\tdescription: description,\r\n\t\t\t\t\ttags: tags,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tRemovePost: async (postId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/deletePost`, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tpostId: postId,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tGetPostById: async (postId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/getPost/${postId}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t});\r\n\t\t\tconst data = results.json();\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * @param {Number} i The amount of posts i already have.\r\n\t * @param {String} ownerId Get all the posts for specific user or \"all\".\r\n\t * @returns 10 posts from 'all' list or for specific user.\r\n\t */\r\n\tGetPosts: async (i, ownerId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(\r\n\t\t\t\tbaseUrl + `/posts/getPosts/${i == null ? 0 : i}&${ownerId || 'all'}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tconst data = await results.json();\r\n\t\t\tif (!Object.keys(data).length) return false;\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * @param {Array} tags\r\n\t * @returns List of posts with the givin tags.\r\n\t */\r\n\tGetPostsByTags: async (tags) => {\r\n\t\ttry {\r\n\t\t\tif (!tags) throw new Error('tags is undefined');\r\n\t\t\tlet queryTags = '';\r\n\t\t\ttags.forEach((tag) => {\r\n\t\t\t\tqueryTags = queryTags + tag + ',';\r\n\t\t\t});\r\n\t\t\tlet results = await fetch(\r\n\t\t\t\tbaseUrl + `/posts/getPostsByTag/${queryTags == null ? '' : queryTags}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tconst data = results.json();\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tUpdatePost: async (id, header, brief, description, tags) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/editPost/${id || ''}`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\theader: header,\r\n\t\t\t\t\tbrief: brief,\r\n\t\t\t\t\tdescription: description,\r\n\t\t\t\t\ttags: tags,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tUpVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/upVote', {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\tDownVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/downVote', {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\tClearVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/clearVote', {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\t/**\r\n\t * Get current user vote (if exist) for specific post.\r\n\t *\r\n\t * @param {string} postId\r\n\t * @returns vote object or false if current user did not vote yet.\r\n\t */\r\n\tGetVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/checkVote/' + postId, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tcredentials: 'include',\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\r\n\tAddComment: async (comment, postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/addComment', {\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'include',\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t\tcomment: comment,\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\t\treturn results.ok;\r\n\t},\r\n\tUpdateComment: async (id, comment) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/editComment/${id || ''}`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcomment: comment,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tGetComments: async (postId, i) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(\r\n\t\t\t\tbaseUrl + `/posts/getComments/${postId == null ? 0 : postId}&${i == null ? 0 : i}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tconst data = await results.json();\r\n\t\t\tif (!Object.keys(data).length) return false;\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tDeleteComment: async (commentId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/deleteComment`, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcommentId: commentId,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * @param {String} reason Reason of report (pornography, violent, etc...)\r\n\t * @param {String} targetType 'Post' or 'Comment'.\r\n\t * @param {String} targetId The id of the post/comment.\r\n\t * @param {String} report The free text of the report.\r\n\t * @returns {Boolean} if network call succeed.\r\n\t */\r\n\tSendReport: async (reason, targetType, targetId, report) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/sendReport`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\treason: reason,\r\n\t\t\t\t\ttargetType: targetType,\r\n\t\t\t\t\ttargetId: targetId, // postId or commentId\r\n\t\t\t\t\treport: report,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport default PostService;\r\n","const Utils = {\r\n\r\n\t// input string, output string in format dd/mm/yyyy\r\n\tDateFormat: (date) => {\r\n\t\tlet formatedDate = new Date(date);\r\n\t\treturn `${formatedDate.getDate()}/${\r\n\t\t\tformatedDate.getMonth() + 1 // get mounth start from 0\r\n\t\t}/${formatedDate.getFullYear()}`; \r\n\t},\r\n};\r\n\r\nexport default Utils;\r\n","import { Link } from 'react-router-dom';\r\nimport Utils from '../../services/Utils';\r\nimport './Post.css';\r\n\r\nconst Post = ({ post, userId }) => {\r\n\treturn (\r\n\t\t<div className='Post'>\r\n\t\t\t<div\r\n\t\t\t\tclassName='card'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t}}\r\n\t\t\t\tkey={post._id}>\r\n\t\t\t\t<div className='post' style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tclassName='postLink'\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: '/postView',\r\n\t\t\t\t\t\t\tstate: { post },\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{post.header}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<p className='fitText'>{post.brief}</p>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t}}>{`Last modified:${Utils.DateFormat(post.lastModifiedDate)}`}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\talignItems: 'flex-end',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<div className='center'>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{post.votesBalance}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tVotes\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{post.commentsCount}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\tComments\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import './Loading.css';\r\nimport RotateRightSharpIcon from '@mui/icons-material/RotateRightSharp';\r\n\r\nconst Loading = () => {\r\n\treturn (\r\n\t\t<div className='Loading'>\r\n\t\t\t<RotateRightSharpIcon color='inherit' fontSize='large'></RotateRightSharpIcon>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect, useState } from 'react';\r\nimport AuthService from '../services/AuthService';\r\nimport PostService from '../services/PostService';\r\nimport './Home.css';\r\nimport Post from './Posts/Post';\r\nimport Loading from './PlaceHolders/Loading';\r\n\r\nconst Home = () => {\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst [profile, setProfile] = useState(null);\r\n\tconst [noMoreStyle, setNoMoreStyle] = useState({ display: 'none' });\r\n\r\n\tlet isFetching = false;\r\n\r\n\tfunction fetchPosts() {\r\n\t\tPostService.GetPosts(posts.length).then((newPosts) => {\r\n\t\t\tif (newPosts) {\r\n\t\t\t\tsetPosts([...posts, ...newPosts]);\r\n\t\t\t\treturn (isFetching = false);\r\n\t\t\t}\r\n\t\t\tsetNoMoreStyle({ display: 'block', color: 'var(--quaternary-bg-color)' });\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchPosts();\r\n\t\tif (profile != null) {\r\n\t\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\t\tif (user.isLogin) {\r\n\t\t\t\t\tsetProfile(await user.profile);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [profile]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='Home'\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\theight: '93vh',\r\n\t\t\t\toverflowY: 'auto',\r\n\t\t\t\toverflowX: 'hidden',\r\n\t\t\t}}\r\n\t\t\tonScroll={(e) => {\r\n\t\t\t\tif (!isFetching) {\r\n\t\t\t\t\tconst bottom =\r\n\t\t\t\t\t\tMath.floor(e.target.scrollHeight - e.target.scrollTop - 1) <= e.target.clientHeight;\r\n\t\t\t\t\tif (bottom) {\r\n\t\t\t\t\t\tisFetching = true;\r\n\t\t\t\t\t\tfetchPosts();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t{posts.length > 0 ? ( //In case posts was retrieved from fetch\r\n\t\t\t\t<div style={{ height: 'fit-content' }}>\r\n\t\t\t\t\t{posts.length > 0 ? ( // In case posts.length > 0\r\n\t\t\t\t\t\tposts.map((post) => <Post post={post} userId={null} key={post._id} />)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t//In case posts.length == 0\r\n\t\t\t\t\t\t<p>There is nothing to show.</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<p style={noMoreStyle}>No more posts</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading></Loading>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useState } from 'react';\r\nimport './Input.css';\r\n\r\n/**\r\n *\r\n * @param {Function} getInput callback function to set the value\r\n * @param {String} value current value and set first value of component\r\n * @param {Boolean} isError boolean to set an error\r\n * @param {String} error the text of the error that you want to show\r\n * @param {String} type type of input\r\n * @param {Boolean} required input required?\r\n * @param {Number} height height of input with default setting\r\n * @param {Number} width width of input with default setting\r\n * @param {Number} errorMarginTop error message margin top with default setting\r\n * @param {Number} errorMarginLeft error message margin left with default setting\r\n * @param {String} errorColor color of error\r\n * @param {String} errorFontSize change error font size in px\r\n * @param {String} fontSize change font size in px\r\n * @param {Boolean} autoComplete form autoComplete on or off\r\n *\r\n */\r\n\r\nconst Input = ({\r\n\tgetInput = () => {},\r\n\tvalue = '',\r\n\tisError,\r\n\terror = '',\r\n\ttype = 'text',\r\n\trequired = false,\r\n\theight = 20,\r\n\twidth = 160,\r\n\terrorMarginTop = 3,\r\n\terrorMarginLeft = 3,\r\n\terrorColor = 'var(--error-color)',\r\n\terrorFontSize='12px',\r\n\tfontSize ='14px',\r\n\tautoComplete,\r\n}) => {\r\n\tconst style = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t};\r\n\r\n\tif (width === 'full') {\r\n\t\tstyle.width = '-webkit-fill-available';\r\n\t}\r\n\tif (height === 'full') {\r\n\t\tstyle.height = '-webkit-fill-available';\r\n\t}\r\n\r\n\tconst openError = {\r\n\r\n\t\tcolor: errorColor,\r\n\t\tleft: `${errorMarginLeft}px`,\r\n\t\ttop: `${height + errorMarginTop}px`,\r\n\t\tfontSize: errorFontSize,\r\n\t};\r\n\tconst closeError = {\r\n\t\tcolor: errorColor,\r\n\t\tleft: `${errorMarginLeft}px`,\r\n\t\ttop: '0px',\r\n\t\tfontSize: '7px',\r\n\t};\r\n\r\n\tconst [errorText, setErrorText] = useState(error);\r\n\tconst [inputStyle, setInputStyle] = useState('inputContent');\r\n\tconst [errorTextStyle, setErrorTextStyle] = useState(closeError);\r\n\r\n\tconst requiredError = 'Do you missed something?';\r\n\r\n\tconst requiredCheck = (e) => {\r\n\t\tif (required) {\r\n\t\t\tif (e.target.value === '') {\r\n\t\t\t\tsetInputStyle('inputContent error');\r\n\t\t\t\tsetErrorTextStyle(openError);\r\n\t\t\t\tsetErrorText(requiredError);\r\n\t\t\t\treturn getInput(null);\r\n\t\t\t}\r\n\t\t\tsetInputStyle('inputContent');\r\n\t\t\tsetErrorTextStyle(closeError);\r\n\t\t\treturn getInput(e.target.value);\r\n\t\t}\r\n\t\tsetInputStyle('inputContent');\r\n\t\tsetErrorTextStyle(closeError);\r\n\t\tsetErrorText(error);\r\n\t\treturn getInput(e.target.value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isError) {\r\n\t\t\tsetInputStyle('inputContent error');\r\n\t\t\tsetErrorText(error);\r\n\t\t\treturn setErrorTextStyle(openError);\r\n\t\t}\r\n\t\tsetInputStyle('inputContent');\r\n\t\tsetErrorTextStyle(closeError);\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isError]);\r\n\r\n\treturn (\r\n\t\t<div className='inputContainer' style={style} autoComplete={autoComplete ? 'on' : 'off'}>\r\n\t\t\t{type === 'textarea' ? (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputStyle}\r\n\t\t\t\t\tonChange={(e) => requiredCheck(e)}\r\n\t\t\t\t\tvalue={value ? value : ''}\r\n\t\t\t\t\tstyle={{ fontSize: fontSize }}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputStyle}\r\n\t\t\t\t\tonChange={(e) => requiredCheck(e)}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tvalue={value ? value : ''}\r\n\t\t\t\t\tstyle={{ fontSize: fontSize }}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<span style={errorTextStyle} className={'errorText'}>\r\n\t\t\t\t{errorText}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport Input from '../Utils/Input';\r\nimport './Login.css';\r\nconst Login = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [isError, setIsError] = useState();\r\n\r\n\tconst errorText ='Forgot your username or password?';\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst login = async (e) => {\r\n\t\tsetIsError(false);\r\n\t\te.preventDefault();\r\n\t\tawait AuthService.Login(email, password).then((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t} else {\r\n\t\t\t\tsetIsError(true);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='Login'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<h3>Login</h3>\r\n\t\t\t\t<form\r\n\t\t\t\t\tonSubmit={login}\r\n\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\tlogin(e)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<Input required={true} getInput={(e) => setEmail(e)} isError={isError} value={email} />\r\n\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\tgetInput={(e) => setPassword(e)}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\terror={errorText}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button style={{ alignSelf: 'center', margin: '5px' }}>Login</button>\r\n\t\t\t\t\t<Link to='/register' style={{ alignSelf: 'center', margin: '5px' }}>\r\n\t\t\t\t\t\t<button>Register</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport './Register.css';\r\n\r\nconst Register = () => {\r\n\tlet [firstName, setFirstName] = useState('');\r\n\tlet [lastName, setLastName] = useState('');\r\n\tlet [email, setEmail] = useState('');\r\n\tlet [password, setPassword] = useState('');\r\n\tconst history = useHistory();\r\n\r\n\tconst register = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (\r\n\t\t\tawait AuthService.Register(\r\n\t\t\t\tfirstName,\r\n\t\t\t\tlastName,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='Register'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<h3>Register</h3>\r\n\t\t\t\t<form onSubmit={register}>\r\n\t\t\t\t\t<label>First Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\r\n\t\t\t\t\t\trequired></input>\r\n\t\t\t\t\t<label>Last Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\r\n\t\t\t\t\t\trequired></input>\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tstyle={{ alignSelf: 'center', margin: '5px' }}>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto='/login'\r\n\t\t\t\t\t\tstyle={{ alignSelf: 'center', margin: '5px' }}>\r\n\t\t\t\t\t\t<button>Back</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\n\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n\tconst [details, setDetails] = useState(null);\r\n\tconst history = new useHistory();\r\n\r\n\tconst logout = () => {\r\n\t\tAuthService.Logout();\r\n\t\thistory.push('/');\r\n\t\twindow.location.reload();\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\tsetDetails(await user.profile);\r\n\t\t});\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className='Profile'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<h2 style={{ color: 'var(--secondary-bg-color)' }}>Profile:</h2>\r\n\t\t\t\t{details ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: 'var(--secondary-bg-color)',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{details.firstName + ' ' + details.lastName}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<p>Email: {details.email}</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tRegister date:\r\n\t\t\t\t\t\t\t{' ' + details.registerDate.slice(0, 10)}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<button onClick={logout}>Logout</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Loading...</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import './Chip.css';\r\n\r\n/**\r\n *\r\n * @param {String} label Label of chip\r\n * @param {Function} deleteChip DeleteChip\r\n * @returns\r\n */\r\n\r\nconst Chip = ({ label = '', deleteChip = () => {} }) => {\r\n\treturn (\r\n\t\t<div className={label !== '' ? 'chip' : 'chip error'}>\r\n\t\t\t<p>{label}</p>\r\n\t\t\t<div className='deleteChip' onClick={deleteChip}>x</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chip;\r\n","import { useEffect, useState } from 'react';\r\nimport './Select.css';\r\n\r\n/**\r\n *\r\n * @param {String} label Label of the select\r\n * @param {Array} options Options for select\r\n * @param {Function} getChosenOption Return selected value\r\n * @param {Boolean} isError is the value have some error\r\n */\r\n\r\nconst Select = ({ label, options, getChosenOption = () => {}, isError = false }) => {\r\n\tconst [isOpen, setIsOpen] = useState(null);\r\n\tconst [optionsList, setOptionsList] = useState(options);\r\n\tconst [labelPosition, setLabelPosition] = useState('');\r\n\tconst [arrowClass, setArrowClass] = useState('arrow down');\r\n\tconst [optionsClass, setOptionsClass] = useState('options close');\r\n\tconst [chosenOption, setChosenOption] = useState('');\r\n\tconst [optionStyle, setOptionStyle] = useState({});\r\n\tconst [selectClass, setSelectClass] = useState('select');\r\n\r\n\tconst openOptions = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (isOpen) {\r\n\t\t\tsetIsOpen(false);\r\n\t\t\tsetOptionsClass('options close');\r\n\t\t\treturn setArrowClass('arrow down');\r\n\t\t}\r\n\t\tsetIsOpen(true);\r\n\t\tsetArrowClass('arrow up');\r\n\t\tsetOptionsClass('options open');\r\n\t};\r\n\r\n\tconst search = () => {\r\n\t\tif (chosenOption) {\r\n\t\t\tsetSelectClass('select');\r\n\t\t\tsetLabelPosition('up');\r\n\t\t\tsetArrowClass('arrow up');\r\n\t\t\tsetOptionsClass('options open');\r\n\t\t} else {\r\n\t\t\tif (isError) {\r\n\t\t\t\tsetSelectClass('select error')\r\n\t\t\t}\r\n\t\t\tsetLabelPosition('');\r\n\t\t\tsetOptionsClass('options close');\r\n\t\t\tsetArrowClass('arrow down');\r\n\t\t}\r\n\t\tconst arr = options.filter((option) => {\r\n\t\t\treturn option.toLowerCase().includes(chosenOption.toLowerCase());\r\n\t\t});\r\n\t\tif (arr.length) {\r\n\t\t\tsetOptionStyle({});\r\n\t\t\treturn setOptionsList(arr);\r\n\t\t}\r\n\t\tsetOptionStyle({ color: 'grey', pointerEvents: 'none' });\r\n\t\tsetOptionsList(['No options']);\r\n\t};\r\n\r\n\tconst isAlphabet = (e) => {\r\n\t\tif (e.key === 'Backspace') {\r\n\t\t\tsetChosenOption(chosenOption.slice(0, -1));\r\n\t\t}\r\n\t\tif ((e.keyCode >= 48 && e.keyCode <= 90) || (e.keyCode >= 96 && e.keyCode <= 105)) {\r\n\t\t\tsetChosenOption(chosenOption + e.key);\r\n\t\t}\r\n\t};\r\n\r\n\tconst chooseOption = (e) => {\r\n\t\tsetOptionsClass('options close');\r\n\t\tsetLabelPosition('up');\r\n\t\tsetChosenOption(e.target.innerText);\r\n\t\tgetChosenOption(e.target.innerText);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isError) {\r\n\t\t\treturn setSelectClass('select error');\r\n\t\t}\r\n\t\tsetSelectClass('select');\r\n\t}, [isError]);\r\n\r\n\treturn (\r\n\t\t<div className={selectClass} onClick={openOptions}>\r\n\t\t\t<button\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\topenOptions(e);\r\n\t\t\t\t}}>\r\n\t\t\t\t<i className={arrowClass}></i>\r\n\t\t\t</button>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={chosenOption}\r\n\t\t\t\tonChange={(e) => {}}\r\n\t\t\t\tonKeyDown={isAlphabet}\r\n\t\t\t\tonKeyUp={search}\r\n\t\t\t/>\r\n\t\t\t<label className={labelPosition}>{label}</label>\r\n\t\t\t<p style={{ margin: 0, height: '5px' }}></p>\r\n\t\t\t<div className={optionsClass}>\r\n\t\t\t\t{options ? (\r\n\t\t\t\t\toptionsList.map((option, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<p key={i} className={'option'} onClick={chooseOption} style={optionStyle}>\r\n\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>No options</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Select;\r\n","import './PostForm.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport PostService from '../../services/PostService';\r\nimport Chip from '../Utils/Chip';\r\nimport Input from '../Utils/Input';\r\nimport Select from '../Utils/Select';\r\n\r\nconst PostForm = () => {\r\n\tconst history = useHistory();\r\n\tconst post =\r\n\t\thistory.location.pathname === '/addProject'\r\n\t\t\t? null\r\n\t\t\t: JSON.parse(window.sessionStorage.getItem('post'));\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [header, setHeader] = useState(post ? post.header : '');\r\n\tconst [brief, setBrief] = useState(post ? post.brief : '');\r\n\tconst [description, setDescription] = useState(post ? post.description : '');\r\n\tconst [tagsList, setTagsList] = useState([]);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst [isError, setIsError] = useState();\r\n\r\n\tconst handleDelete = (i) => {\r\n\t\tif (tagsList.length > 0) {\r\n\t\t\tconst newList = tagsList.filter((item, index) => {\r\n\t\t\t\treturn index !== i ? 1 : 0;\r\n\t\t\t});\r\n\t\t\tsetTagsList(newList);\r\n\t\t}\r\n\t};\r\n\r\n\tconst editPost = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (header && brief && description && tagsList.length) {\r\n\t\t\tPostService.UpdatePost(post._id, header, brief, description, tagsList).then((results) => {\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn history.push('/');\r\n\t\t}\r\n\t\tsetIsError(true);\r\n\t};\r\n\r\n\tconst addPost = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (header && brief && description && tagsList.length) {\r\n\t\t\tPostService.AddPost(header, brief, description, tagsList).then((results) => {\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn history.push('/');\r\n\t\t}\r\n\t\tsetIsError(true);\r\n\t};\r\n\r\n\tconst addTag = () => {\r\n\t\tif (tagsList.includes(inputValue)) return;\r\n\t\tsetTagsList([...tagsList, inputValue]);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\tif (user) setIsLogin(user.isLogin);\r\n\t\t});\r\n\t}, [tagsList]);\r\n\r\n\treturn (\r\n\t\t<div className='postForm'>\r\n\t\t\t{isLogin ? (\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName='card'\r\n\t\t\t\t\tonSubmit={history.location.pathname === '/addProject' ? addPost : editPost}\r\n\t\t\t\t\tstyle={{ width: '100%', maxWidth: '600px', height: 'fit-content'}}>\r\n\t\t\t\t\t<label>Header</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tgetInput={(e) => setHeader(e)}\r\n\t\t\t\t\t\tvalue={header}\r\n\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\theight={30}\r\n\t\t\t\t\t\tfontSize={'20px'}\r\n\t\t\t\t\t\tAutocomplete={true}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\terror={'You must fill all the sections'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label>Short Brief</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='textarea'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tgetInput={(e) => setBrief(e)}\r\n\t\t\t\t\t\tvalue={brief}\r\n\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\terror={'You must fill all the sections'}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<label>Description</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='textarea'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tgetInput={(e) => setDescription(e)}\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\theight={200}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\terror={'You must fill all the sections'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='tagsContainer'>\r\n\t\t\t\t\t\t<div className='selectDiv'>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabel={'Tag'}\r\n\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\tgetChosenOption={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetInputValue(e);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tisError={inputValue ? false : isError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginLeft: '5px',\r\n\t\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\t\ttop: '5px',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={addTag}>\r\n\t\t\t\t\t\t\t\tAdd Tag\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='tagList'>\r\n\t\t\t\t\t\t\t{tagsList.map((tag, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\tlabel={tag}\r\n\t\t\t\t\t\t\t\t\t\tdeleteChip={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleDelete(index);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t\tmargin: '5px',\r\n\t\t\t\t\t\t\t\tcolor: 'var(--secondary-bg-color)',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t) : (\r\n\t\t\t\t<p style={{ color: 'var(--primary-bg-color)' }}>Need to be login to add new project</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst options = ['Java', 'JavaScript', 'Python', 'React', 'Angular'];\r\nexport default PostForm;\r\n","import { useEffect, useState } from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport PostService from '../../services/PostService';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport './Vote.css';\r\n\r\nconst Vote = (props) => {\r\n\tconst btnClickedStyle = {\r\n\t\tbackgroundColor: 'var(--btmPrimary-bg-color)',\r\n\t};\r\n\tconst btnNotClickedStyle = {\r\n\t\tbackgroundColor: 'var(--btmTertiary-bg-color)',\r\n\t};\r\n\tconst btnUnavailable = {\r\n\t\tbackgroundColor: 'lightgrey',\r\n\t\tcursor: 'inherit',\r\n\t};\r\n\r\n\tconst [post, setPost] = useState(props.post);\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [votesBalance, setVotes] = useState(false);\r\n\r\n\tconst [btnUpVote, setBtnUpVote] = useState(btnNotClickedStyle);\r\n\r\n\tconst [btnDownVote, setBtnDownVote] = useState(btnNotClickedStyle);\r\n\r\n\tconst upVote = (postId) => {\r\n\t\tPostService.UpVote(postId).then((updatedPost) => {\r\n\t\t\tsetPost(updatedPost);\r\n\t\t});\r\n\t};\r\n\tconst downVote = (postId) => {\r\n\t\tPostService.DownVote(postId).then((updatedPost) => {\r\n\t\t\tsetPost(updatedPost);\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPost(props.post);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props.post]);\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then((user) => {\r\n\t\t\tsetIsLogin(user.isLogin);\r\n\t\t\tsetVotes(post.votesBalance);\r\n\t\t\t// User is login?\r\n\t\t\tif (user.isLogin) {\r\n\t\t\t\tPostService.GetVote(post._id).then((vote) => {\r\n\t\t\t\t\t// User have vote for this post\r\n\t\t\t\t\tif (vote) {\r\n\t\t\t\t\t\tsetIsLogin(true);\r\n\t\t\t\t\t\tif (vote.upVote === true) {\r\n\t\t\t\t\t\t\tsetBtnUpVote(btnClickedStyle); // upVote is clicked\r\n\t\t\t\t\t\t\tsetBtnDownVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t\t} else if (vote.upVote === false) {\r\n\t\t\t\t\t\t\tsetBtnDownVote(btnClickedStyle); // downVote is clicked\r\n\t\t\t\t\t\t\tsetBtnUpVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// In case User have no vote in this post\r\n\t\t\t\t\t\tsetBtnUpVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t\tsetBtnDownVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// In case User is not login\r\n\t\t\t\tsetBtnUpVote(btnUnavailable);\r\n\t\t\t\tsetBtnDownVote(btnUnavailable);\r\n\t\t\t}\r\n\t\t});\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [post.votesBalance]);\r\n\r\n\treturn (\r\n\t\t<div className='Vote'>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btnUpVote}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (isLogin) upVote(post._id);\r\n\t\t\t\t}}>\r\n\t\t\t\t<KeyboardArrowUpIcon></KeyboardArrowUpIcon>\r\n\t\t\t</button>\r\n\t\t\t<div>\r\n\t\t\t\t{votesBalance !== false ? (\r\n\t\t\t\t\t<p style={{ color: 'rgb(13, 27, 42)' }}>{votesBalance}</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>\" \"</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btnDownVote}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (isLogin) downVote(post._id);\r\n\t\t\t\t}}>\r\n\t\t\t\t<KeyboardArrowDownIcon></KeyboardArrowDownIcon>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Vote;\r\n","import './DefaultProfileIcon.css';\r\n\r\nconst DefaultProfileIcon = ({ name }) => {\r\n\tconst fixScale = 'A'.charCodeAt();\r\n\tconst acronyms = name.split(' ').map((x) => x[0]);\r\n\r\n\tfunction setBackgroundColor() {\r\n\t\tlet color = (acronyms[0].charCodeAt() - fixScale) % 64;\r\n\t\tlet saturation = calc(\r\n\t\t\tacronyms[0].charCodeAt() - fixScale,\r\n\t\t);\r\n\t\tlet lightness = calc(\r\n\t\t\tacronyms[1].charCodeAt() - fixScale,\r\n\t\t);\r\n\t\treturn `hsl(${color}, ${saturation}%, ${lightness}%)`;\r\n\t}\r\n\r\n\t// value in range ('A'.charCodeAt() to 'a'.charCodeAt())-'a'.charCodeAt() return value (0-100)\r\n\tfunction calc(x) {\r\n\t\treturn Math.floor((20 / 13) * x);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='iconProfile'\r\n\t\t\tstyle={{ backgroundColor: setBackgroundColor() }}>\r\n\t\t\t<p className='acronyms' style={{ color: setBackgroundColor() }} >{acronyms}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DefaultProfileIcon;\r\n","import './CardProfile.css';\r\nimport DefaultProfileIcon from './DefaultProfileIcon';\r\nimport Utils from '../../services/Utils';\r\n\r\nconst CardProfile = ({ profile }) => {\r\n\tlet date = Utils.DateFormat(profile.lastActiveAt);\r\n\treturn (\r\n\t\t<div className='card cardProfile'>\r\n\t\t\t<DefaultProfileIcon name={`${profile.firstName} ${profile.lastName}`} />\r\n\t\t\t<div className='details'>\r\n\t\t\t\t<p className='name'>\r\n\t\t\t\t\t{profile.firstName} {profile.lastName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='lastSeen'>\r\n\t\t\t\t\tLast seen: <br />\r\n\t\t\t\t\t{date.toString()}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardProfile;\r\n","import './CommentEditor.css';\r\nimport { useEffect, useState } from 'react';\r\nimport PostService from '../../services/PostService';\r\nimport CardProfile from '../CardProfile/CardProfile';\r\nimport AuthService from '../../services/AuthService';\r\nimport Input from '../Utils/Input';\r\n\r\nconst CommentEditor = ({ post }) => {\r\n\tconst [comment, setComment] = useState('');\r\n\tconst [profile, setProfile] = useState(null);\r\n\tconst [isError, setIsError] = useState();\r\n\r\n\tconst errorText = 'Cant send empty comment';\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then((user) => {\r\n\t\t\tsetProfile(user.profile);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tfunction addComment(e) {\r\n\t\tsetIsError(false);\r\n\t\te.preventDefault();\r\n\t\tif (comment) {\r\n\t\t\tPostService.AddComment(comment, post._id);\r\n\t\t\tsetComment('');\r\n\t\t} else {\r\n\t\t\tsetIsError(true);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='CommentEditor'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<form className='commentForm' onSubmit={addComment}>\r\n\t\t\t\t\t{profile ? <CardProfile profile={profile} /> : <div></div>}\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\twidth={700}\r\n\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\tgetInput={(e) => {\r\n\t\t\t\t\t\t\tsetComment(e);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\terror={errorText}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\ttype={'textarea'}\r\n\t\t\t\t\t\tvalue={comment}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='postBtn' type='submit'>\r\n\t\t\t\t\t\tComment\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CommentEditor;\r\n","import { useEffect, useState } from 'react';\r\nimport PostService from '../services/PostService';\r\nimport './Report.css';\r\nimport Input from './Utils/Input';\r\nimport Select from './Utils/Select';\r\n\r\n/**\r\n * @param {Bool} reportIsOpen indicate if component open\r\n * @param {Function} closeReport callback function to close the component\r\n * @param {Object} from {item , itemId}\r\n */\r\nconst Report = ({ reportIsOpen, closeReport, from }) => {\r\n\tconst reportItem = from.item;\r\n\tconst itemId = from.itemId;\r\n\r\n\tconst [reportReason, setReportReason] = useState();\r\n\tconst [reportText, setReportText] = useState();\r\n\tconst [reportStyle, setReportStyle] = useState(null);\r\n\tconst options = ['Violent or harmful contents', 'Spam', 'Pornography'];\r\n\r\n\tconst sendReport = (e) => {\r\n\t\te.preventDefault();\r\n\t\tPostService.SendReport(reportReason, reportItem, itemId, reportText);\r\n\t\tcloseReport();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reportIsOpen) {\r\n\t\t\tsetReportStyle('report open');\r\n\t\t} else {\r\n\t\t\tsetReportStyle('report close');\r\n\t\t}\r\n\t}, [reportIsOpen]);\r\n\r\n\treturn (\r\n\t\t<div className='Report'>\r\n\t\t\t{reportStyle === 'report open' && (\r\n\t\t\t\t<div className='reportBackGround' onClick={closeReport}></div>\r\n\t\t\t)}\r\n\t\t\t<form className={`card ${reportStyle}`} onSubmit={sendReport}>\r\n\t\t\t\t<div className='closeReportBtnDiv'>\r\n\t\t\t\t\t<button className='closeReportBtn' onClick={closeReport}>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h1\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tReport {reportItem}{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tjustifyContent: 'space-around',\r\n\t\t\t\t\t\twidth: '-webkit-fill-available',\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<h4 style={{ margin: '0 0 2px 0' }}>Report reason:</h4>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabel={'Report reason'}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\tgetChosenOption={(e) => setReportReason(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Input getInput={(e) => setReportText(e)} value={reportText} type={'textarea'} height={'full'} width={'full'} />\r\n\t\t\t\t<button className='submit' type='submit'>\r\n\t\t\t\t\tSend a report\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Report;\r\n","import { useEffect, useState } from 'react';\r\nimport AuthService from '../services/AuthService';\r\nimport Report from './Report';\r\nimport './ToolTip.css';\r\n\r\nconst ToolTip = ({ edit, del, from }) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [user, setUser] = useState({});\r\n\r\n\tconst openMenu = () => {\r\n\t\tsetIsOpen(true);\r\n\t};\r\n\tconst closeMenu = () => {\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\tconst [reportIsOpen, setReportIsOpen] = useState(false);\r\n\r\n\tconst reported = () => {\r\n\t\tsetReportIsOpen(true);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLogin) {\r\n\t\t\tAuthService.Profile().then((user) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tsetUser(user.profile);\r\n\t\t\t\t\tsetIsLogin(user.isLogin);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='toolTip'>\r\n\t\t\t{isLogin && !isOpen && <div className='dots' onClick={openMenu}></div>}\r\n\t\t\t{isLogin && isOpen && (\r\n\t\t\t\t<div className='menu card' onMouseLeave={closeMenu} onClick={closeMenu}>\r\n\t\t\t\t\t{from.ownerId === user._id ? (\r\n\t\t\t\t\t\t<div className='login'>\r\n\t\t\t\t\t\t\t<button onClick={edit}>Edit</button>\r\n\t\t\t\t\t\t\t<button onClick={del}>Delete</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className='login'>\r\n\t\t\t\t\t\t\t<button onClick={reported}>Report</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<Report reportIsOpen={reportIsOpen} closeReport={() => setReportIsOpen(false)} from={from} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ToolTip;\r\n","import CardProfile from '../CardProfile/CardProfile';\r\nimport Utils from '../../services/Utils';\r\nimport './Comment.css';\r\nimport ToolTip from '../ToolTip';\r\nimport { useState } from 'react';\r\nimport PostService from '../../services/PostService';\r\nimport Input from '../Utils/Input';\r\n\r\nconst Comment = ({ comment }) => {\r\n\tconst [commentText, setCommentText] = useState(comment.comment);\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst [date, setDate] = useState(Utils.DateFormat(comment.lastModifiedDate));\r\n\tconst [commentStyle, setCommentStyle] = useState();\r\n\tconst lastText = comment.comment;\r\n\tconst deleteComment = () => {\r\n\t\tPostService.DeleteComment(comment._id).then((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tsetCommentStyle({ display: 'none' });\r\n\t\t\t} else {\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst editedComment = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsEditing(false);\r\n\t\tPostService.UpdateComment(comment._id, commentText);\r\n\t\tsetDate(Utils.DateFormat(Date()));\r\n\t};\r\n\r\n\tconst editComment = () => {\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\tconst cancelEdit = () => {\r\n\t\tsetCommentText(lastText);\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='card' style={commentStyle}>\r\n\t\t\t<div className='commentContent'>\r\n\t\t\t\t{isEditing ? (\r\n\t\t\t\t\t<form onSubmit={editedComment} className='editContainer'>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\t\tgetInput={(e) => setCommentText(e)}\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\ttype={'textarea'}\r\n\t\t\t\t\t\t\tvalue={commentText}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className='editBtnsDiv'>\r\n\t\t\t\t\t\t\t<button className='cancel' type='button' onClick={cancelEdit}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className='editBtn' type='submit'>\r\n\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='commentText'>\r\n\t\t\t\t\t\t<div className='content'>\r\n\t\t\t\t\t\t\t{commentText.split('\\n').map((text, i) => {\r\n\t\t\t\t\t\t\t\t//split every line in text to p\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<p style={{ margin: '2px' }} key={comment._id + i}>\r\n\t\t\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t\t\t\t<CardProfile profile={comment.ownerProfile}></CardProfile>\r\n\t\t\t\t\t\t\t<p className='date'>{date}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<ToolTip\r\n\t\t\t\t\tedit={editComment}\r\n\t\t\t\t\tdel={deleteComment}\r\n\t\t\t\t\tfrom={{ item: 'comment', itemId: comment._id, ownerId: comment.ownerId }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Comment;\r\n","import './TextPlaceHolder.css';\r\nconst TextPlaceHolder = ({ rows, color }) => {\r\n\tconst styleProps = { height: '20px', backgroundColor: color, margin: '5px', borderRadius: '5px' };\r\n\tlet skeleton = [];\r\n\tfor (let i = 0; i < rows; i++) {\r\n\t\tskeleton.push(<div style={styleProps} key={i}></div>);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='TextPlaceHolder' style={{ display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t{skeleton}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TextPlaceHolder;\r\n","import './PostView.css';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport Vote from './Vote';\r\nimport CommentEditor from './CommentEditor';\r\nimport CardProfile from '../CardProfile/CardProfile';\r\nimport PostService from '../../services/PostService';\r\nimport Comment from './Comment';\r\nimport ToolTip from '../ToolTip';\r\nimport Loading from '../PlaceHolders/Loading';\r\nimport TextPlaceHolder from '../PlaceHolders/TextPlaceHolder';\r\nimport Utils from '../../services/Utils';\r\n\r\nconst PostView = () => {\r\n\tconst location = useLocation();\r\n\tconst history = new useHistory();\r\n\tconst { id } = useParams();\r\n\r\n\tconst defaultPost = {\r\n\t\t_id: '',\r\n\t\townerId: ' ',\r\n\t\theader: ' ',\r\n\t\tbrief: ' ',\r\n\t\tdescription: ' ',\r\n\t\tvotesBalance: ' ',\r\n\t\tcommentsCount: ' ',\r\n\t\ttags: [' '],\r\n\t\tlastModifiedDate: ' ',\r\n\t\tcreationDate: ' ',\r\n\t\t__v: 0,\r\n\t};\r\n\r\n\tconst [post, setPost] = useState(defaultPost);\r\n\tconst [author, setAuthor] = useState(null);\r\n\tconst [comments, setComments] = useState([]);\r\n\tconst [isLoadingPost, setIsLoadingPost] = useState(true);\r\n\tconst [loadingStyle, setLoadingStyle] = useState({\r\n\t\tdisplay: 'none',\r\n\t});\r\n\tconst [noMoreStyle, setNoMoreStyle] = useState({ display: 'none' });\r\n\tlet isFetching = false;\r\n\r\n\tconst editPost = () => {\r\n\t\twindow.sessionStorage.setItem('post', JSON.stringify(post));\r\n\t\thistory.push(`/editProject/`);\r\n\t};\r\n\r\n\tconst deletePost = () => {\r\n\t\tPostService.RemovePost(post._id).then((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t} else {\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadComments = () => {\r\n\t\tsetLoadingStyle({ display: 'inline-block' });\r\n\t\tPostService.GetComments(post._id, comments.length)\r\n\t\t\t.then((results) => {\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\tsetComments(comments.concat(results));\r\n\t\t\t\t\treturn (isFetching = false);\r\n\t\t\t\t}\r\n\t\t\t\tsetNoMoreStyle({ display: 'block', color: 'var(--quaternary-bg-color)' });\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetLoadingStyle({ display: 'none' });\r\n\t\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tPostService.GetPostById(id || location.state?.post._id).then((updatedPost) => {\r\n\t\t\tsetPost(updatedPost[0]);\r\n\t\t\tsetIsLoadingPost(false);\r\n\t\t});\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (post.ownerId !== defaultPost.ownerId) {\r\n\t\t\tAuthService.FindProfile(post.ownerId).then((profile) => {\r\n\t\t\t\tsetAuthor(profile);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [post]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonScroll={(e) => {\r\n\t\t\t\tif (noMoreStyle.display === 'block') return;\r\n\t\t\t\tif (!isFetching) {\r\n\t\t\t\t\tconst bottom =\r\n\t\t\t\t\t\tMath.floor(e.target.scrollHeight - e.target.scrollTop - 1) <= e.target.clientHeight;\r\n\t\t\t\t\tif (bottom) {\r\n\t\t\t\t\t\tisFetching = true;\r\n\t\t\t\t\t\tloadComments();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tstyle={{ overflowY: 'auto', height: '93vh' }}>\r\n\t\t\t{id !== undefined || post ? (\r\n\t\t\t\t<div className='postView'>\r\n\t\t\t\t\t<div className='fullPost'>\r\n\t\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t\t{isLoadingPost === false ? (\r\n\t\t\t\t\t\t\t\t<div className='postContent'>\r\n\t\t\t\t\t\t\t\t\t<div className='postText'>\r\n\t\t\t\t\t\t\t\t\t\t<h2\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'var(--secondary-bg-color)',\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{post.header}\r\n\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t{post.brief.split('\\n').map((text, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t//split every line in text to p\r\n\t\t\t\t\t\t\t\t\t\t\treturn <p key={post._id + i}>{text}</p>;\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t{post.description.split('\\n').map((text, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t//split every line in text to p\r\n\t\t\t\t\t\t\t\t\t\t\treturn <p key={post._id + i}>{text}</p>;\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<ToolTip\r\n\t\t\t\t\t\t\t\t\t\tedit={editPost}\r\n\t\t\t\t\t\t\t\t\t\tdel={deletePost}\r\n\t\t\t\t\t\t\t\t\t\tfrom={{ item: 'post', itemId: post._id, ownerId: post.ownerId }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<TextPlaceHolder\r\n\t\t\t\t\t\t\t\t\trows={10}\r\n\t\t\t\t\t\t\t\t\theight={'20px'}\r\n\t\t\t\t\t\t\t\t\tcolor={'var(--tertiary-bg-color)'}></TextPlaceHolder>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<div className='lowerPost'>\r\n\t\t\t\t\t\t\t\t{author ? (\r\n\t\t\t\t\t\t\t\t\t<CardProfile profile={author} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName='card'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\theight: '100px',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '200px',\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{post.ownerId !== defaultPost.ownerId && (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='tags'>\r\n\t\t\t\t\t\t\t\t\t\t\t<p style={{ fontSize: '12px' }}>Tags:</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{post.tags.map((tag, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='tag' key={post._id + index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>{tag}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<Vote post={post} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p>Last Modified: {Utils.DateFormat(post.lastModifiedDate)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<CommentEditor post={post}></CommentEditor>\r\n\t\t\t\t\t\t{comments.length > 0 && // In case posts.length > 0\r\n\t\t\t\t\t\t\tcomments.map((comment) => {\r\n\t\t\t\t\t\t\t\treturn <Comment comment={comment} key={comment._id}></Comment>;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<div className='loadingDiv' style={loadingStyle}>\r\n\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p style={noMoreStyle}>No more Comments</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{comments.length === 0 && (\r\n\t\t\t\t\t\t\t<button onClick={loadComments} className='loadComments'>\r\n\t\t\t\t\t\t\t\tLoad comments\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p>there is nothing to show</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostView;\r\n","const About = () => {\r\n\treturn (\r\n\t\t<div className='About'>\r\n\t\t\t<p>About page</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","const ContactUs = () => {\r\n\treturn (\r\n\t\t<div className='ContactUs'>\r\n\t\t\t<p>Contact us</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ContactUs;\r\n","const NotFoundPage = () => {\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<h1 style={{color: 'var(--quaternary-bg-color)'}}>404</h1>\r\n\t\t\t<h3 style={{color: 'var(--quaternary-bg-color)'}}>There is no page like that</h3>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import Header from './components/Menus/Header'\r\nimport {\r\n\tBrowserRouter,\r\n\tRoute,\r\n\tSwitch,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Login from './components/Authentication/Login';\r\nimport Register from './components/Authentication/Register';\r\nimport Profile from './components/Authentication/Profile';\r\nimport PostForm from './components/Posts/PostForm';\r\nimport PostView from './components/Posts/PostView';\r\nimport About from './components/About';\r\nimport ContactUs from './components/ContactUs';\r\nimport Report from './components/Report';\r\nimport NotFoundPage from './components/404';\r\n\r\nfunction App() {\r\n\t\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t\t<Home/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/login'>\r\n\t\t\t\t\t\t<Login/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/profile'>\r\n\t\t\t\t\t\t<Profile/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/register'>\r\n\t\t\t\t\t\t<Register/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/addProject'>\r\n\t\t\t\t\t\t<PostForm/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/editProject/'>\r\n\t\t\t\t\t\t<PostForm/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/postView/' >\r\n\t\t\t\t\t\t<PostView/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/report'>\r\n\t\t\t\t\t<Report/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/postView/:id'>\r\n\t\t\t\t\t\t<PostView/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/about'>\r\n\t\t\t\t\t\t<About/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/contactUs'>\r\n\t\t\t\t\t\t<ContactUs/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route>\r\n\t\t\t\t\t\t<NotFoundPage/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}