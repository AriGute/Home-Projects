{"version":3,"sources":["services/AuthService.js","components/Menus/Drawer.js","components/Menus/Header.js","services/PostService.js","services/Utils.js","components/Posts/Post.js","components/PlaceHolders/Loading.js","components/TagListSearch.js","components/Home.js","components/Utils/Input.js","components/Authentication/Login.js","components/Authentication/Register.js","components/Authentication/Profile.js","components/Utils/Chip.js","components/Utils/Select.js","components/Posts/PostForm.js","components/Posts/Vote.js","components/CardProfile/DefaultProfileIcon.js","components/CardProfile/CardProfile.js","components/Posts/CommentEditor.js","components/Report.js","components/ToolTip.js","components/Posts/Comment.js","components/PlaceHolders/TextPlaceHolder.js","components/Posts/Tag.js","components/Posts/Tags.js","components/Posts/PostView.js","components/About.js","components/ContactUs.js","components/404.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","document","location","origin","AuthService","Login","email","password","a","fetch","headers","method","credentials","body","JSON","stringify","results","ok","console","log","Register","firstName","lastName","Logout","window","sessionStorage","removeItem","Profile","profile","getItem","parse","user","isLogin","json","setItem","FindProfile","uid","data","Drawer","useState","isOpen","setIsOpen","setIsLogin","useEffect","then","className","onClick","style","textAlign","color","padding","to","Header","href","fontSize","PostService","AddPost","header","brief","description","tags","RemovePost","postId","GetPostById","GetPosts","i","ownerId","Object","keys","length","GetPostsByTags","Error","queryTags","forEach","tag","slice","UpdatePost","id","UpVote","DownVote","ClearVote","GetVote","AddComment","comment","UpdateComment","GetComments","DeleteComment","commentId","SendReport","reason","targetType","targetId","report","Utils","DateFormat","date","formatedDate","Date","getDate","getMonth","getFullYear","Post","post","shortBrief","userId","split","map","text","_id","shortBriefIsOpen","setShortBriefIsOpen","display","flexDirection","justifyContent","position","pathname","state","props","children","lastModifiedDate","marginBottom","votesBalance","marginTop","commentsCount","Loading","TagListSearch","search","tagsToSearch","setTagsToSearch","tagName","index","e","filter","options","Home","useLocation","posts","setPosts","setProfile","noMoreStyle","setNoMoreStyle","tagSearch","setTagSearch","isFetching","fetchPosts","newPosts","height","overflowY","overflowX","onScroll","Math","floor","target","scrollHeight","scrollTop","clientHeight","reload","SearchTag","Input","getInput","value","isError","error","type","required","width","errorMarginTop","errorMarginLeft","errorColor","errorFontSize","autoComplete","maxLetters","openError","left","top","closeError","errorText","setErrorText","inputStyle","setInputStyle","errorTextStyle","setErrorTextStyle","requiredCheck","onChange","maxLength","setEmail","setPassword","setIsError","history","useHistory","login","preventDefault","result","push","onSubmit","onKeyDown","key","alignSelf","margin","setFirstName","setLastName","register","details","setDetails","registerDate","Chip","label","deleteChip","Select","getChosenOption","optionsList","setOptionsList","labelPosition","setLabelPosition","arrowClass","setArrowClass","optionsClass","setOptionsClass","chosenOption","setChosenOption","optionStyle","setOptionStyle","selectClass","setSelectClass","openOptions","chooseOption","innerText","keyCode","onKeyUp","arr","option","toLowerCase","includes","pointerEvents","PostForm","setHeader","setBrief","setDescription","tagsList","setTagsList","inputValue","setInputValue","maxWidth","Autocomplete","marginLeft","newList","item","handleDelete","Vote","btnClickedStyle","backgroundColor","btnNotClickedStyle","btnUnavailable","cursor","setPost","setVotes","setUserId","btnUpVote","setBtnUpVote","btnDownVote","setBtnDownVote","vote","upVote","updatedPost","DefaultProfileIcon","name","fixScale","charCodeAt","acronyms","x","setBackgroundColor","saturation","calc","lightness","CardProfile","lastActiveAt","toString","CommentEditor","setComment","Report","reportIsOpen","closeReport","from","reportItem","itemId","reportReason","setReportReason","reportText","setReportText","reportStyle","setReportStyle","alignItems","ToolTip","edit","del","setUser","closeMenu","setReportIsOpen","onMouseLeave","Comment","commentText","setCommentText","isEditing","setIsEditing","setDate","commentStyle","setCommentStyle","lastText","ownerProfile","TextPlaceHolder","rows","styleProps","borderRadius","skeleton","Tag","Tags","PostView","useParams","defaultPost","creationDate","__v","firstCommentLoad","setFirstCommentLoad","author","setAuthor","comments","setComments","isLoadingPost","setIsLoadingPost","loadingStyle","setLoadingStyle","loadComments","concat","undefined","About","ContactUs","NotFoundPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b5f65ee2.chunk.js","sourcesContent":["const baseUrl = document.location.origin;\r\nconst AuthService = {\r\n\tLogin: async (email, password) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/auth/login', {\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tRegister: async (firstName, lastName, email, password) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/auth/register', {\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tfirstName: firstName,\r\n\t\t\t\t\tlastName: lastName,\r\n\t\t\t\t\temail: email,\r\n\t\t\t\t\tpassword: password,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tLogout: async () => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/auth/logout', {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t});\r\n\t\t\twindow.sessionStorage.removeItem('profile');\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tProfile: async () => {\r\n\t\tconst profile = window.sessionStorage.getItem('profile');\r\n\t\tif (profile) {\r\n\t\t\treturn JSON.parse(profile);\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tlet results = await fetch(baseUrl + '/auth/profile', {\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t});\r\n\t\t\t\tconst user = {\r\n\t\t\t\t\tisLogin: results.ok,\r\n\t\t\t\t};\r\n\t\t\t\tif (results.ok) {\r\n\t\t\t\t\tuser.profile = await results.json();\r\n\t\t\t\t\twindow.sessionStorage.setItem('profile', JSON.stringify(user));\r\n\t\t\t\t}\r\n\t\t\t\treturn user;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tFindProfile: async (uid) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/auth/findProfile/${uid}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t});\r\n\t\t\tconst data = await results.json();\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport default AuthService;\r\n","import './Drawer.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport AddBoxIcon from '@mui/icons-material/AddBox';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\r\nimport AuthService from '../../services/AuthService';\r\n\r\nconst Drawer = () => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\tconst [isLogin, setIsLogin] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\tif (user) setIsLogin(user.isLogin);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='sideBar'>\r\n\t\t\t<div className='sideMenuIcon menuBtn' onClick={() => setIsOpen(true)}>\r\n\t\t\t\t<p></p>\r\n\t\t\t\t<p></p>\r\n\t\t\t\t<p></p>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={isOpen ? 'container open' : 'container closed'}\r\n\t\t\t\tonClick={() => setIsOpen(false)}>\r\n\t\t\t\t<div className={isOpen ? 'navContainer open' : 'navContainer closed'}>\r\n\t\t\t\t\t<h3\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\tcolor: 'var(--cardPrimary-bg-color)',\r\n\t\t\t\t\t\t\tpadding: '5px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tHome Projects\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<div className='navBarList'>\r\n\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/'>\r\n\t\t\t\t\t\t\t<HomeIcon className='icon'></HomeIcon>\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{isLogin && (\r\n\t\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/addProject'>\r\n\t\t\t\t\t\t\t\t<AddBoxIcon className='icon'></AddBoxIcon>\r\n\t\t\t\t\t\t\t\tAdd Project\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/contactUs'>\r\n\t\t\t\t\t\t\t<AlternateEmailIcon className='icon'></AlternateEmailIcon>\r\n\t\t\t\t\t\t\tContact Us\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link onClick={() => setIsOpen(false)} to='/about'>\r\n\t\t\t\t\t\t\t<InfoIcon className='icon'></InfoIcon>\r\n\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Drawer;\r\n","import './Header.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport Drawer from './Drawer';\r\n\r\nconst Header = () => {\r\n\tconst [isLogin, setIsLogin] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then((user) => {\r\n\t\t\tif (user) {\r\n\t\t\t\tsetIsLogin(user.isLogin);\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<Drawer/>\r\n\t\t\t<a href='/'>\r\n\t\t\t\t<h1>Home Projects</h1>\r\n\t\t\t</a>\r\n\t\t\t{isLogin ? (\r\n\t\t\t\t<Link to='/profile'>\r\n\t\t\t\t\t<AccountCircleIcon className='menuBtn' fontSize='large'></AccountCircleIcon>\r\n\t\t\t\t</Link>\r\n\t\t\t ) : (\r\n\t\t\t\t<Link to='/login'>\r\n\t\t\t\t\t<LoginIcon fontSize='large' className='menuBtn' ></LoginIcon>\r\n\t\t\t\t</Link>\r\n\t\t\t  )} \r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","const baseUrl = document.location.origin;\r\n\r\nconst PostService = {\r\n\tAddPost: async (header, brief, description, tags) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + '/posts/addPost', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\theader: header,\r\n\t\t\t\t\tbrief: brief,\r\n\t\t\t\t\tdescription: description,\r\n\t\t\t\t\ttags: tags,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tRemovePost: async (postId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/deletePost`, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tpostId: postId,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tGetPostById: async (postId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/getPost/${postId}`, {\r\n\t\t\t\tmethod: 'GET',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t});\r\n\t\t\tconst data = results.json();\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * @param {Number} i The amount of posts i already have.\r\n\t * @param {String} ownerId Get all the posts for specific user or \"all\".\r\n\t * @returns 10 posts from 'all' list or for specific user.\r\n\t */\r\n\tGetPosts: async (i, ownerId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(\r\n\t\t\t\tbaseUrl + `/posts/getPosts/${i == null ? 0 : i}&${ownerId || 'all'}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tconst data = await results.json();\r\n\t\t\tif (!Object.keys(data).length) return false;\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * @param {Array} tags\r\n\t * @returns List of posts with the givin tags.\r\n\t */\r\n\tGetPostsByTags: async (tags) => {\r\n\t\ttry {\r\n\t\t\tif (!tags) throw new Error('tags is undefined');\r\n\t\t\tlet queryTags = '';\r\n\t\t\ttags.forEach((tag) => {\r\n\t\t\t\tqueryTags = queryTags + tag + ',';\r\n\t\t\t});\r\n\t\t\tqueryTags = queryTags.slice(0, queryTags.length-1);\r\n\t\t\tlet results = await fetch(\r\n\t\t\t\tbaseUrl + `/posts/getPostsByTag/${queryTags == null ? '' : queryTags}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tconst data = results.json();\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tUpdatePost: async (id, header, brief, description, tags) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/editPost/${id || ''}`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\theader: header,\r\n\t\t\t\t\tbrief: brief,\r\n\t\t\t\t\tdescription: description,\r\n\t\t\t\t\ttags: tags,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tUpVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/upVote', {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\tDownVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/downVote', {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\tClearVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/clearVote', {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t}),\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\t/**\r\n\t * Get current user vote (if exist) for specific post.\r\n\t *\r\n\t * @param {string} postId\r\n\t * @returns vote object or false if current user did not vote yet.\r\n\t */\r\n\tGetVote: async (postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/checkVote/' + postId, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\tcredentials: 'include',\r\n\t\t});\r\n\t\tconst data = await results.json();\r\n\t\treturn data;\r\n\t},\r\n\r\n\tAddComment: async (comment, postId) => {\r\n\t\tconst results = await fetch(baseUrl + '/posts/addComment', {\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'include',\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: postId,\r\n\t\t\t\tcomment: comment,\r\n\t\t\t}),\r\n\t\t});\r\n\r\n\t\treturn results.ok;\r\n\t},\r\n\tUpdateComment: async (id, comment) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/editComment/${id || ''}`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcomment: comment,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tGetComments: async (postId, i) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(\r\n\t\t\t\tbaseUrl + `/posts/getComments/${postId == null ? 0 : postId}&${i == null ? 0 : i}`,\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\tcredentials: 'include',\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t\tconst data = await results.json();\r\n\t\t\tif (!Object.keys(data).length) return false;\r\n\t\t\treturn data;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\tDeleteComment: async (commentId) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/deleteComment`, {\r\n\t\t\t\tmethod: 'DELETE',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcommentId: commentId,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n\t/**\r\n\t * @param {String} reason Reason of report (pornography, violent, etc...)\r\n\t * @param {String} targetType 'Post' or 'Comment'.\r\n\t * @param {String} targetId The id of the post/comment.\r\n\t * @param {String} report The free text of the report.\r\n\t * @returns {Boolean} if network call succeed.\r\n\t */\r\n\tSendReport: async (reason, targetType, targetId, report) => {\r\n\t\ttry {\r\n\t\t\tlet results = await fetch(baseUrl + `/posts/sendReport`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tcredentials: 'include',\r\n\t\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\treason: reason,\r\n\t\t\t\t\ttargetType: targetType,\r\n\t\t\t\t\ttargetId: targetId, // postId or commentId\r\n\t\t\t\t\treport: report,\r\n\t\t\t\t}),\r\n\t\t\t});\r\n\t\t\treturn results.ok;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t},\r\n};\r\n\r\nexport default PostService;\r\n","const Utils = {\r\n\r\n\t// input string, output string in format dd/mm/yyyy\r\n\tDateFormat: (date) => {\r\n\t\tlet formatedDate = new Date(date);\r\n\t\treturn `${formatedDate.getDate()}/${\r\n\t\t\tformatedDate.getMonth() + 1 // get mounth start from 0\r\n\t\t}/${formatedDate.getFullYear()}`; \r\n\t},\r\n};\r\n\r\nexport default Utils;\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Utils from '../../services/Utils';\r\nimport './Post.css';\r\n\r\nconst Post = ({ post, userId }) => {\r\n\tconst shortBrief = post.brief.split('\\n').map((text, i) => {\r\n\t\t//split every line in text to p\r\n\t\treturn <p key={post._id + i}>{text}</p>;\r\n\t});\r\n\r\n\tconst [shortBriefIsOpen, setShortBriefIsOpen] = useState(false);\r\n\treturn (\r\n\t\t<div className='Post'>\r\n\t\t\t<div\r\n\t\t\t\tclassName='card'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\tjustifyContent: 'space-between',\r\n\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t}}\r\n\t\t\t\tkey={post._id}>\r\n\t\t\t\t<div className='post' style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tclassName='postLink'\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: `/postView/${post._id}`,\r\n\t\t\t\t\t\t\tstate: { post },\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{post.header}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div className='shortBrief'>\r\n\t\t\t\t\t\t{shortBriefIsOpen ? (\r\n\t\t\t\t\t\t\tshortBrief\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<p className='shortBrief'>\r\n\t\t\t\t\t\t\t\t{shortBrief[0].props.children.length > 150\r\n\t\t\t\t\t\t\t\t\t? `${shortBrief[0].props.children.slice(0, 150)}`\r\n\t\t\t\t\t\t\t\t\t: shortBrief[0]}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{`Last modified:${Utils.DateFormat(post.lastModifiedDate)}`}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='commentsVotes'>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{post.votesBalance}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tVotes\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginBottom: 0,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{post.commentsCount}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: '12px',\r\n\t\t\t\t\t\t\tmarginTop: 0,\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tComments\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{(shortBrief.length > 1 || shortBrief[0].props.children.length > 50) && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='moreBtn'\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (!shortBriefIsOpen) return setShortBriefIsOpen(true);\r\n\t\t\t\t\t\t\tsetShortBriefIsOpen(false);\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{shortBriefIsOpen ? 'Click for less' : 'Click to read more'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import './Loading.css';\r\nimport RotateRightSharpIcon from '@mui/icons-material/RotateRightSharp';\r\n\r\nconst Loading = () => {\r\n\treturn (\r\n\t\t<div className='Loading'>\r\n\t\t\t<RotateRightSharpIcon color='inherit' fontSize='large'></RotateRightSharpIcon>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","import { useState } from 'react';\r\nimport './TagListSearch.css';\r\n\r\nconst TagListSearch = ({ tags, search }) => {\r\n\tconst [tagsToSearch, setTagsToSearch] = useState({});\r\n\treturn (\r\n\t\t<div className={'tagSearch'}>\r\n\t\t\t<p style={{ fontSize: '12px' }}>Search tags:</p>\r\n\t\t\t<div className='tagsList'>\r\n\t\t\t\t{tags.map((tagName, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\tif (tagsToSearch[tagName]) {\r\n\t\t\t\t\t\t\t\t\tsetTagsToSearch({ ...tagsToSearch, [tagName]: false });\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tsetTagsToSearch({ ...tagsToSearch, [tagName]: true });\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName={tagsToSearch[tagName] ? 'tagSearchButton choose' : 'tagSearchButton'}\r\n\t\t\t\t\t\t\tkey={`${tagName}${index}`}>\r\n\t\t\t\t\t\t\t{tagName}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName={'searchButton'}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsearch(Object.keys(tagsToSearch).filter((tag) => tagsToSearch[tag]));\r\n\t\t\t\t}}>\r\n\t\t\t\tSearch\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagListSearch;\r\n","import { useEffect, useState } from 'react';\r\nimport AuthService from '../services/AuthService';\r\nimport PostService from '../services/PostService';\r\nimport './Home.css';\r\nimport Post from './Posts/Post';\r\nimport Loading from './PlaceHolders/Loading';\r\nimport TagListSearch from './TagListSearch';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n\tconst location = useLocation();\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst [profile, setProfile] = useState(null);\r\n\tconst [noMoreStyle, setNoMoreStyle] = useState({ display: 'none' });\r\n\tlet [tagSearch, setTagSearch] = useState(false);\r\n\r\n\tlet isFetching = false;\r\n\r\n\tconst SearchTag = (tags) => {\r\n\t\tif (tags.length > 0) {\r\n\t\t\tsetTagSearch(true);\r\n\t\t\tPostService.GetPostsByTags(tags).then((newPosts) => {\r\n\t\t\t\tsetPosts(newPosts);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\twindow.location.reload();\r\n\t};\r\n\r\n\tconst fetchPosts = (tags) => {\r\n\t\tif (tags) {\r\n\t\t\tsetTagSearch(true);\r\n\t\t\treturn PostService.GetPostsByTags([tags]).then((newPosts) => {\r\n\t\t\t\tif (newPosts) {\r\n\t\t\t\t\tsetPosts(newPosts);\r\n\t\t\t\t\tlocation.state = null;\r\n\t\t\t\t\treturn (isFetching = false);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetTagSearch(false);\r\n\t\tPostService.GetPosts(posts.length).then((newPosts) => {\r\n\t\t\tif (newPosts) {\r\n\t\t\t\tsetPosts([...posts, ...newPosts]);\r\n\t\t\t\treturn (isFetching = false);\r\n\t\t\t}\r\n\t\t\tsetNoMoreStyle({ display: 'block', color: 'var(--quaternary-bg-color)' });\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchPosts(location.state);\r\n\r\n\t\tif (profile != null) {\r\n\t\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\t\tif (user.isLogin) {\r\n\t\t\t\t\tsetProfile(await user.profile);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [profile]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='Home'\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\theight: '93vh',\r\n\t\t\t\toverflowY: 'auto',\r\n\t\t\t\toverflowX: 'hidden',\r\n\t\t\t}}\r\n\t\t\tonScroll={(e) => {\r\n\t\t\t\tif (!isFetching && !tagSearch) {\r\n\t\t\t\t\tconst bottom =\r\n\t\t\t\t\t\tMath.floor(e.target.scrollHeight - e.target.scrollTop - 1) <= e.target.clientHeight;\r\n\t\t\t\t\tif (bottom) {\r\n\t\t\t\t\t\tisFetching = true;\r\n\t\t\t\t\t\tfetchPosts();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}>\r\n\t\t\t{posts.length > 0 ? ( //In case posts was retrieved from fetch\r\n\t\t\t\t<div style={{ height: 'fit-content' }}>\r\n\t\t\t\t\t<TagListSearch\r\n\t\t\t\t\t\ttags={options}\r\n\t\t\t\t\t\tsearch={(tags) => {\r\n\t\t\t\t\t\t\tSearchTag(tags);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{posts.length > 0 ? ( // In case posts.length > 0\r\n\t\t\t\t\t\tposts.map((post) => <Post post={post} userId={null} key={post._id} />)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t//In case posts.length == 0\r\n\t\t\t\t\t\t<p>There is nothing to show.</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<p style={noMoreStyle}>No more posts</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<Loading></Loading>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst options = ['Java', 'JavaScript', 'Python', 'React', 'Angular'];\r\n\r\nexport default Home;\r\n","import { useEffect, useState } from 'react';\r\nimport './Input.css';\r\n\r\n/**\r\n *\r\n * @param {Function} getInput callback function to set the value\r\n * @param {String} value current value and set first value of component\r\n * @param {Boolean} isError boolean to set an error\r\n * @param {String} error the text of the error that you want to show\r\n * @param {String} type type of input\r\n * @param {Boolean} required input required?\r\n * @param {Number} height height of input with default setting\r\n * @param {Number} width width of input with default setting\r\n * @param {Number} errorMarginTop error message margin top with default setting\r\n * @param {Number} errorMarginLeft error message margin left with default setting\r\n * @param {String} errorColor color of error\r\n * @param {String} errorFontSize change error font size in px\r\n * @param {String} fontSize change font size in px\r\n * @param {Boolean} autoComplete form autoComplete on or off\r\n *\r\n */\r\n\r\nconst Input = ({\r\n\tgetInput = () => {},\r\n\tvalue = '',\r\n\tisError,\r\n\terror = '',\r\n\ttype = 'text',\r\n\trequired = false,\r\n\theight = 20,\r\n\twidth = 160,\r\n\terrorMarginTop = 3,\r\n\terrorMarginLeft = 3,\r\n\terrorColor = 'var(--secondary-bg-color)',\r\n\terrorFontSize='12px',\r\n\tfontSize ='14px',\r\n\tautoComplete,\r\n\tmaxLetters,\r\n}) => {\r\n\tconst style = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t};\r\n\r\n\tif (width === 'full') {\r\n\t\tstyle.width = '-webkit-fill-available';\r\n\t}\r\n\tif (height === 'full') {\r\n\t\tstyle.height = '-webkit-fill-available';\r\n\t}\r\n\r\n\tconst openError = {\r\n\t\tcolor: errorColor,\r\n\t\tleft: `${errorMarginLeft}px`,\r\n\t\ttop: `${height + errorMarginTop}px`,\r\n\t\tfontSize: errorFontSize,\r\n\t};\r\n\tconst closeError = {\r\n\t\tcolor: errorColor,\r\n\t\tleft: `${errorMarginLeft}px`,\r\n\t\ttop: '0px',\r\n\t\tfontSize: '7px',\r\n\t};\r\n\r\n\tconst [errorText, setErrorText] = useState(error);\r\n\tconst [inputStyle, setInputStyle] = useState('inputContent');\r\n\tconst [errorTextStyle, setErrorTextStyle] = useState(closeError);\r\n\r\n\tconst requiredError = 'Do you missed something?';\r\n\r\n\tconst requiredCheck = (e) => {\r\n\t\tif (required) {\r\n\t\t\tif (e.target.value === '') {\r\n\t\t\t\tsetInputStyle('inputContent error');\r\n\t\t\t\tsetErrorTextStyle(openError);\r\n\t\t\t\tsetErrorText(requiredError);\r\n\t\t\t\treturn getInput(null);\r\n\t\t\t}\r\n\t\t\tsetInputStyle('inputContent');\r\n\t\t\tsetErrorTextStyle(closeError);\r\n\t\t\treturn getInput(e.target.value);\r\n\t\t}\r\n\t\tsetInputStyle('inputContent');\r\n\t\tsetErrorTextStyle(closeError);\r\n\t\tsetErrorText(error);\r\n\t\treturn getInput(e.target.value);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isError) {\r\n\t\t\tsetInputStyle('inputContent error');\r\n\t\t\tsetErrorText(error);\r\n\t\t\treturn setErrorTextStyle(openError);\r\n\t\t}\r\n\t\tsetInputStyle('inputContent');\r\n\t\tsetErrorTextStyle(closeError);\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isError]);\r\n\r\n\treturn (\r\n\t\t<div className='inputContainer' style={style} autoComplete={autoComplete ? 'on' : 'off'}>\r\n\t\t\t{type === 'textarea' ? (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={inputStyle}\r\n\t\t\t\t\tonChange={(e) => requiredCheck(e)}\r\n\t\t\t\t\tvalue={value ? value : ''}\r\n\t\t\t\t\tstyle={{ fontSize: fontSize }}\r\n\t\t\t\t\tmaxLength={maxLetters}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName={inputStyle}\r\n\t\t\t\t\tonChange={(e) => requiredCheck(e)}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tvalue={value ? value : ''}\r\n\t\t\t\t\tstyle={{ fontSize: fontSize }}\r\n\t\t\t\t\tmaxLength={maxLetters}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<span style={errorTextStyle} className={'errorText'}>\r\n\t\t\t\t{errorText}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","import { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport Input from '../Utils/Input';\r\nimport './Login.css';\r\nconst Login = () => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [isError, setIsError] = useState();\r\n\r\n\tconst errorText ='Forgot your username or password?';\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst login = async (e) => {\r\n\t\tsetIsError(false);\r\n\t\te.preventDefault();\r\n\t\tawait AuthService.Login(email, password).then((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t} else {\r\n\t\t\t\tsetIsError(true);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='Login'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<h3>Login</h3>\r\n\t\t\t\t<form\r\n\t\t\t\t\tonSubmit={login}\r\n\t\t\t\t\tonKeyDown={(e) => {\r\n\t\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\t\tlogin(e)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<Input required={true} getInput={(e) => setEmail(e)} isError={isError} value={email} />\r\n\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\tgetInput={(e) => setPassword(e)}\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\terror={errorText}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button style={{ alignSelf: 'center', margin: '25px 5px 5px 5px' }}>Login</button>\r\n\t\t\t\t\t<Link to='/register' style={{ alignSelf: 'center', margin: '5px' }}>\r\n\t\t\t\t\t\t<button>Register</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport './Register.css';\r\n\r\nconst Register = () => {\r\n\tlet [firstName, setFirstName] = useState('');\r\n\tlet [lastName, setLastName] = useState('');\r\n\tlet [email, setEmail] = useState('');\r\n\tlet [password, setPassword] = useState('');\r\n\tconst history = useHistory();\r\n\r\n\tconst register = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (\r\n\t\t\tawait AuthService.Register(\r\n\t\t\t\tfirstName,\r\n\t\t\t\tlastName,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='Register'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<h3>Register</h3>\r\n\t\t\t\t<form onSubmit={register}>\r\n\t\t\t\t\t<label>First Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\r\n\t\t\t\t\t\trequired></input>\r\n\t\t\t\t\t<label>Last Name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\r\n\t\t\t\t\t\trequired></input>\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tstyle={{ alignSelf: 'center', margin: '5px' }}>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto='/login'\r\n\t\t\t\t\t\tstyle={{ alignSelf: 'center', margin: '5px' }}>\r\n\t\t\t\t\t\t<button>Back</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport Utils from '../../services/Utils';\r\n\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n\tconst [details, setDetails] = useState(null);\r\n\tconst history = new useHistory();\r\n\r\n\tconst logout = () => {\r\n\t\tAuthService.Logout();\r\n\t\thistory.push('/');\r\n\t\twindow.location.reload();\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\tsetDetails(await user.profile);\r\n\t\t});\r\n\t}, []);\r\n\treturn (\r\n\t\t<div className='Profile'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<h2 style={{ color: 'var(--secondary-bg-color)' }}>Profile:</h2>\r\n\t\t\t\t{details ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tcolor: 'var(--secondary-bg-color)',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{details.firstName + ' ' + details.lastName}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<p>Email: {details.email}</p>\r\n\t\t\t\t\t\t<p>Register date:{Utils.DateFormat(details.registerDate)}</p>\r\n\t\t\t\t\t\t<button onClick={logout}>Logout</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Loading...</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n","import './Chip.css';\r\n\r\n/**\r\n *\r\n * @param {String} label Label of chip\r\n * @param {Function} deleteChip DeleteChip\r\n * @returns\r\n */\r\n\r\nconst Chip = ({ label = '', deleteChip = () => {} }) => {\r\n\treturn (\r\n\t\t<div className={label !== '' ? 'chip' : 'chip error'}>\r\n\t\t\t<p>{label}</p>\r\n\t\t\t<div className='deleteChip' onClick={deleteChip}>x</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chip;\r\n","import { useEffect, useState } from 'react';\r\nimport './Select.css';\r\n\r\n/**\r\n *\r\n * @param {String} label Label of the select\r\n * @param {Array} options Options for select\r\n * @param {Function} getChosenOption Return selected value\r\n * @param {Boolean} isError is the value have some error\r\n */\r\n\r\nconst Select = ({ label, options, getChosenOption = () => {}, isError = false }) => {\r\n\tconst [isOpen, setIsOpen] = useState(null);\r\n\tconst [optionsList, setOptionsList] = useState(options);\r\n\tconst [labelPosition, setLabelPosition] = useState('');\r\n\tconst [arrowClass, setArrowClass] = useState('arrow down');\r\n\tconst [optionsClass, setOptionsClass] = useState('options close');\r\n\tconst [chosenOption, setChosenOption] = useState('');\r\n\tconst [optionStyle, setOptionStyle] = useState({});\r\n\tconst [selectClass, setSelectClass] = useState('select');\r\n\r\n\tconst openOptions = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (isOpen) {\r\n\t\t\tsetIsOpen(false);\r\n\t\t\tsetOptionsClass('options close');\r\n\t\t\treturn setArrowClass('arrow down');\r\n\t\t}\r\n\t\tsetIsOpen(true);\r\n\t\tsetArrowClass('arrow up');\r\n\t\tsetOptionsClass('options open');\r\n\t};\r\n\r\n\tconst search = () => {\r\n\t\tif (chosenOption) {\r\n\t\t\tsetSelectClass('select');\r\n\t\t\tsetLabelPosition('up');\r\n\t\t\tsetArrowClass('arrow up');\r\n\t\t\tsetOptionsClass('options open');\r\n\t\t} else {\r\n\t\t\tif (isError) {\r\n\t\t\t\tsetSelectClass('select error')\r\n\t\t\t}\r\n\t\t\tsetLabelPosition('');\r\n\t\t\tsetOptionsClass('options close');\r\n\t\t\tsetArrowClass('arrow down');\r\n\t\t}\r\n\t\tconst arr = options.filter((option) => {\r\n\t\t\treturn option.toLowerCase().includes(chosenOption.toLowerCase());\r\n\t\t});\r\n\t\tif (arr.length) {\r\n\t\t\tsetOptionStyle({});\r\n\t\t\treturn setOptionsList(arr);\r\n\t\t}\r\n\t\tsetOptionStyle({ color: 'grey', pointerEvents: 'none' });\r\n\t\tsetOptionsList(['No options']);\r\n\t};\r\n\r\n\tconst isAlphabet = (e) => {\r\n\t\tif (e.key === 'Backspace') {\r\n\t\t\tsetChosenOption(chosenOption.slice(0, -1));\r\n\t\t}\r\n\t\tif ((e.keyCode >= 48 && e.keyCode <= 90) || (e.keyCode >= 96 && e.keyCode <= 105)) {\r\n\t\t\tsetChosenOption(chosenOption + e.key);\r\n\t\t}\r\n\t};\r\n\r\n\tconst chooseOption = (e) => {\r\n\t\tsetOptionsClass('options close');\r\n\t\tsetLabelPosition('up');\r\n\t\tsetChosenOption(e.target.innerText);\r\n\t\tgetChosenOption(e.target.innerText);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isError) {\r\n\t\t\treturn setSelectClass('select error');\r\n\t\t}\r\n\t\tsetSelectClass('select');\r\n\t}, [isError]);\r\n\r\n\treturn (\r\n\t\t<div className={selectClass} onClick={openOptions}>\r\n\t\t\t<button\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\topenOptions(e);\r\n\t\t\t\t}}>\r\n\t\t\t\t<i className={arrowClass}></i>\r\n\t\t\t</button>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={chosenOption}\r\n\t\t\t\tonChange={(e) => {}}\r\n\t\t\t\tonKeyDown={isAlphabet}\r\n\t\t\t\tonKeyUp={search}\r\n\t\t\t/>\r\n\t\t\t<label className={labelPosition}>{label}</label>\r\n\t\t\t<div className={optionsClass}>\r\n\t\t\t\t{options ? (\r\n\t\t\t\t\toptionsList.map((option, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<p key={i} className={'option'} onClick={chooseOption} style={optionStyle}>\r\n\t\t\t\t\t\t\t\t{option}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div>No options</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Select;\r\n","import './PostForm.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthService from '../../services/AuthService';\r\nimport PostService from '../../services/PostService';\r\nimport Chip from '../Utils/Chip';\r\nimport Input from '../Utils/Input';\r\nimport Select from '../Utils/Select';\r\n\r\nconst PostForm = () => {\r\n\tconst history = useHistory();\r\n\tconst post =\r\n\t\thistory.location.pathname === '/addProject'\r\n\t\t\t? null\r\n\t\t\t: JSON.parse(window.sessionStorage.getItem('post'));\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [header, setHeader] = useState(post ? post.header : '');\r\n\tconst [brief, setBrief] = useState(post ? post.brief : '');\r\n\tconst [description, setDescription] = useState(post ? post.description : '');\r\n\tconst [tagsList, setTagsList] = useState([]);\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst [isError, setIsError] = useState();\r\n\r\n\tconst handleDelete = (i) => {\r\n\t\tif (tagsList.length > 0) {\r\n\t\t\tconst newList = tagsList.filter((item, index) => {\r\n\t\t\t\treturn index !== i ? 1 : 0;\r\n\t\t\t});\r\n\t\t\tsetTagsList(newList);\r\n\t\t}\r\n\t};\r\n\r\n\tconst editPost = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (header && brief && description && tagsList.length) {\r\n\t\t\tPostService.UpdatePost(post._id, header, brief, description, tagsList).then((results) => {\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn history.push('/');\r\n\t\t}\r\n\t\tsetIsError(true);\r\n\t};\r\n\r\n\tconst addPost = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (header && brief && description && tagsList.length) {\r\n\t\t\tPostService.AddPost(header, brief, description, tagsList).then((results) => {\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn history.push('/');\r\n\t\t}\r\n\t\tsetIsError(true);\r\n\t};\r\n\r\n\tconst addTag = () => {\r\n\t\tif (tagsList.includes(inputValue)) return;\r\n\t\tsetTagsList([...tagsList, inputValue]);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then(async (user) => {\r\n\t\t\tif (user) setIsLogin(user.isLogin);\r\n\t\t});\r\n\t}, [tagsList]);\r\n\r\n\treturn (\r\n\t\t<div className='postForm'>\r\n\t\t\t{isLogin ? (\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName='card'\r\n\t\t\t\t\tonSubmit={history.location.pathname === '/addProject' ? addPost : editPost}\r\n\t\t\t\t\tstyle={{ width: '100%', maxWidth: '600px', height: 'fit-content' }}>\r\n\t\t\t\t\t<label>Header</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tgetInput={(e) => setHeader(e)}\r\n\t\t\t\t\t\tvalue={header}\r\n\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\theight={30}\r\n\t\t\t\t\t\tfontSize={'20px'}\r\n\t\t\t\t\t\tAutocomplete={true}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\terror={'You must fill all the sections'}\r\n\t\t\t\t\t\tmaxLetters={60}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label>Short Brief</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='textarea'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tgetInput={(e) => setBrief(e)}\r\n\t\t\t\t\t\tvalue={brief}\r\n\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\terror={'You must fill all the sections'}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<label>Description</label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype='textarea'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tgetInput={(e) => setDescription(e)}\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\theight={200}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\terror={'You must fill all the sections'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='tagsContainer'>\r\n\t\t\t\t\t\t<div className='selectDiv'>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabel={'Tag'}\r\n\t\t\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\t\t\tgetChosenOption={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetInputValue(e);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tisError={inputValue ? false : isError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginLeft: '5px',\r\n\t\t\t\t\t\t\t\t\tposition: 'relative',\r\n\t\t\t\t\t\t\t\t\ttop: '5px',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={addTag}>\r\n\t\t\t\t\t\t\t\tAdd Tag\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='tagList'>\r\n\t\t\t\t\t\t\t{tagsList.map((tag, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\t\t\tlabel={tag}\r\n\t\t\t\t\t\t\t\t\t\tdeleteChip={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleDelete(index);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\t\t\tmargin: '5px',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t) : (\r\n\t\t\t\t<p style={{ color: 'var(--primary-bg-color)' }}>Need to be login to add new project</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst options = ['Java', 'JavaScript', 'Python', 'React', 'Angular'];\r\nexport default PostForm;\r\n","import { useEffect, useState } from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport PostService from '../../services/PostService';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport './Vote.css';\r\n\r\nconst Vote = (props) => {\r\n\tconst btnClickedStyle = {\r\n\t\tbackgroundColor: 'var(--btmPrimary-bg-color)',\r\n\t};\r\n\tconst btnNotClickedStyle = {\r\n\t\tbackgroundColor: 'var(--btmTertiary-bg-color)',\r\n\t\tcolor:'var(--btmSecondary-bg-color)'\r\n\t};\r\n\tconst btnUnavailable = {\r\n\t\tbackgroundColor: 'lightgrey',\r\n\t\tcursor: 'inherit',\r\n\t};\r\n\r\n\tconst [post, setPost] = useState(props.post);\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [votesBalance, setVotes] = useState(false);\r\n\tconst [userId, setUserId] = useState(null);\r\n\r\n\tconst [btnUpVote, setBtnUpVote] = useState(btnNotClickedStyle);\r\n\r\n\tconst [btnDownVote, setBtnDownVote] = useState(btnNotClickedStyle);\r\n\r\n\tconst upVote = (postId) => {\r\n\t\tPostService.UpVote(postId).then((updatedPost) => {\r\n\t\t\tsetPost(updatedPost);\r\n\t\t});\r\n\t};\r\n\tconst downVote = (postId) => {\r\n\t\tPostService.DownVote(postId).then((updatedPost) => {\r\n\t\t\tsetPost(updatedPost);\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPost(props.post);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [props.post]);\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then((user) => {\r\n\t\t\tif (user.isLogin) setUserId(user.profile._id);\r\n\t\t\tsetIsLogin(user.isLogin);\r\n\t\t\tsetVotes(post.votesBalance);\r\n\t\t\t// User is login?\r\n\t\t\tif (user.isLogin && user.profile._id !== props.post.ownerId) {\r\n\t\t\t\tPostService.GetVote(post._id).then((vote) => {\r\n\t\t\t\t\t// User have vote for this post\r\n\t\t\t\t\tif (vote) {\r\n\t\t\t\t\t\tsetIsLogin(true);\r\n\t\t\t\t\t\tif (vote.upVote === true) {\r\n\t\t\t\t\t\t\tsetBtnUpVote(btnClickedStyle); // upVote is clicked\r\n\t\t\t\t\t\t\tsetBtnDownVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t\t} else if (vote.upVote === false) {\r\n\t\t\t\t\t\t\tsetBtnDownVote(btnClickedStyle); // downVote is clicked\r\n\t\t\t\t\t\t\tsetBtnUpVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// In case User have no vote in this post\r\n\t\t\t\t\t\tsetBtnUpVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t\tsetBtnDownVote(btnNotClickedStyle); // no vote\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// In case User is not login\r\n\t\t\t\tsetBtnUpVote(btnUnavailable);\r\n\t\t\t\tsetBtnDownVote(btnUnavailable);\r\n\t\t\t}\r\n\t\t});\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [post.votesBalance]);\r\n\r\n\treturn (\r\n\t\t<div className='Vote'>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btnUpVote}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (isLogin && userId !== props.post.ownerId) upVote(post._id);\r\n\t\t\t\t}}>\r\n\t\t\t\t<KeyboardArrowUpIcon></KeyboardArrowUpIcon>\r\n\t\t\t</button>\r\n\t\t\t<div>\r\n\t\t\t\t{votesBalance !== false ? (\r\n\t\t\t\t\t<p style={{ color: 'rgb(13, 27, 42)' }}>{votesBalance}</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>\" \"</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tstyle={btnDownVote}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (isLogin && userId !== props.post.ownerId) downVote(post._id);\r\n\t\t\t\t}}>\r\n\t\t\t\t<KeyboardArrowDownIcon></KeyboardArrowDownIcon>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Vote;\r\n","import './DefaultProfileIcon.css';\r\n\r\nconst DefaultProfileIcon = ({ name }) => {\r\n\tconst fixScale = 'A'.charCodeAt();\r\n\tconst acronyms = name.split(' ').map((x) => x[0]);\r\n\r\n\tfunction setBackgroundColor() {\r\n\t\tlet color = (acronyms[0].charCodeAt() - fixScale) % 64;\r\n\t\tlet saturation = calc(\r\n\t\t\tacronyms[0].charCodeAt() - fixScale,\r\n\t\t);\r\n\t\tlet lightness = calc(\r\n\t\t\tacronyms[1].charCodeAt() - fixScale,\r\n\t\t);\r\n\t\treturn `hsl(${color}, ${saturation}%, ${lightness}%)`;\r\n\t}\r\n\r\n\t// value in range ('A'.charCodeAt() to 'a'.charCodeAt())-'a'.charCodeAt() return value (0-100)\r\n\tfunction calc(x) {\r\n\t\treturn Math.floor((20 / 13) * x);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='iconProfile'\r\n\t\t\tstyle={{ backgroundColor: setBackgroundColor() }}>\r\n\t\t\t<p className='acronyms' style={{ color: setBackgroundColor() }} >{acronyms}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DefaultProfileIcon;\r\n","import './CardProfile.css';\r\nimport DefaultProfileIcon from './DefaultProfileIcon';\r\nimport Utils from '../../services/Utils';\r\n\r\nconst CardProfile = ({ profile }) => {\r\n\tlet date = Utils.DateFormat(profile.lastActiveAt);\r\n\treturn (\r\n\t\t<div className='card cardProfile'>\r\n\t\t\t<DefaultProfileIcon name={`${profile.firstName} ${profile.lastName}`} />\r\n\t\t\t<div className='details'>\r\n\t\t\t\t<p className='name'>\r\n\t\t\t\t\t{profile.firstName} {profile.lastName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='lastSeen'>\r\n\t\t\t\t\tLast seen: <br />\r\n\t\t\t\t\t{date.toString()}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardProfile;\r\n","import './CommentEditor.css';\r\nimport { useEffect, useState } from 'react';\r\nimport PostService from '../../services/PostService';\r\nimport CardProfile from '../CardProfile/CardProfile';\r\nimport AuthService from '../../services/AuthService';\r\nimport Input from '../Utils/Input';\r\n\r\nconst CommentEditor = ({ post }) => {\r\n\tconst [comment, setComment] = useState('');\r\n\tconst [profile, setProfile] = useState(null);\r\n\tconst [isError, setIsError] = useState();\r\n\r\n\tconst errorText = 'Cant send empty comment';\r\n\r\n\tuseEffect(() => {\r\n\t\tAuthService.Profile().then((user) => {\r\n\t\t\tsetProfile(user.profile);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tfunction addComment(e) {\r\n\t\tsetIsError(false);\r\n\t\te.preventDefault();\r\n\t\tif (comment) {\r\n\t\t\tPostService.AddComment(comment, post._id);\r\n\t\t\tsetComment('');\r\n\t\t} else {\r\n\t\t\tsetIsError(true);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='CommentEditor'>\r\n\t\t\t<div className='card'>\r\n\t\t\t\t<form className='commentForm' onSubmit={addComment}>\r\n\t\t\t\t\t{profile ? <CardProfile profile={profile} /> : <div></div>}\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\twidth={700}\r\n\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\tgetInput={(e) => {\r\n\t\t\t\t\t\t\tsetComment(e);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\terror={errorText}\r\n\t\t\t\t\t\tisError={isError}\r\n\t\t\t\t\t\ttype={'textarea'}\r\n\t\t\t\t\t\tvalue={comment}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='commentBtn' type='submit'>\r\n\t\t\t\t\t\tComment\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CommentEditor;\r\n","import { useEffect, useState } from 'react';\r\nimport PostService from '../services/PostService';\r\nimport './Report.css';\r\nimport Input from './Utils/Input';\r\nimport Select from './Utils/Select';\r\n\r\n/**\r\n * @param {Bool} reportIsOpen indicate if component open\r\n * @param {Function} closeReport callback function to close the component\r\n * @param {Object} from {item , itemId}\r\n */\r\nconst Report = ({ reportIsOpen, closeReport, from }) => {\r\n\tconst reportItem = from.item;\r\n\tconst itemId = from.itemId;\r\n\r\n\tconst [reportReason, setReportReason] = useState();\r\n\tconst [reportText, setReportText] = useState();\r\n\tconst [reportStyle, setReportStyle] = useState(null);\r\n\tconst options = ['Violent or harmful contents', 'Spam', 'Pornography'];\r\n\r\n\tconst sendReport = (e) => {\r\n\t\te.preventDefault();\r\n\t\tPostService.SendReport(reportReason, reportItem, itemId, reportText);\r\n\t\tcloseReport();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (reportIsOpen) {\r\n\t\t\tsetReportStyle('report open');\r\n\t\t} else {\r\n\t\t\tsetReportStyle('report close');\r\n\t\t}\r\n\t}, [reportIsOpen]);\r\n\r\n\treturn (\r\n\t\t<div className='Report'>\r\n\t\t\t{reportStyle === 'report open' && (\r\n\t\t\t\t<div className='reportBackGround' onClick={closeReport}></div>\r\n\t\t\t)}\r\n\t\t\t<form className={`card ${reportStyle}`} onSubmit={sendReport}>\r\n\t\t\t\t<div className='closeReportBtnDiv'>\r\n\t\t\t\t\t<button className='closeReportBtn' onClick={closeReport}>\r\n\t\t\t\t\t\tX\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h1\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tReport {reportItem}{' '}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tjustifyContent: 'space-around',\r\n\t\t\t\t\t\twidth: '-webkit-fill-available',\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<h4 style={{ margin: '0 0 2px 0' }}>Report reason:</h4>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\tlabel={'Report reason'}\r\n\t\t\t\t\t\toptions={options}\r\n\t\t\t\t\t\tgetChosenOption={(e) => setReportReason(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Input getInput={(e) => setReportText(e)} value={reportText} type={'textarea'} height={'full'} width={'full'} />\r\n\t\t\t\t<button className='submit' type='submit'>\r\n\t\t\t\t\tSend a report\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Report;\r\n","import { useEffect, useState } from 'react';\r\nimport AuthService from '../services/AuthService';\r\nimport Report from './Report';\r\nimport './ToolTip.css';\r\n\r\nconst ToolTip = ({ edit, del, from }) => {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [user, setUser] = useState({});\r\n\r\n\tconst openMenu = () => {\r\n\t\tsetIsOpen(true);\r\n\t};\r\n\tconst closeMenu = () => {\r\n\t\tsetIsOpen(false);\r\n\t};\r\n\r\n\tconst [reportIsOpen, setReportIsOpen] = useState(false);\r\n\r\n\tconst reported = () => {\r\n\t\tsetReportIsOpen(true);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLogin) {\r\n\t\t\tAuthService.Profile().then((user) => {\r\n\t\t\t\tif (user) {\r\n\t\t\t\t\tsetUser(user.profile);\r\n\t\t\t\t\tsetIsLogin(user.isLogin);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='toolTip'>\r\n\t\t\t{isLogin && !isOpen && <div className='dots' onClick={openMenu}></div>}\r\n\t\t\t{isLogin && isOpen && (\r\n\t\t\t\t<div className='menu card' onMouseLeave={closeMenu} onClick={closeMenu}>\r\n\t\t\t\t\t{from.ownerId === user._id ? (\r\n\t\t\t\t\t\t<div className='login'>\r\n\t\t\t\t\t\t\t<button onClick={edit}>Edit</button>\r\n\t\t\t\t\t\t\t<button onClick={del}>Delete</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className='login'>\r\n\t\t\t\t\t\t\t<button onClick={reported}>Report</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<Report reportIsOpen={reportIsOpen} closeReport={() => setReportIsOpen(false)} from={from} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ToolTip;\r\n","import CardProfile from '../CardProfile/CardProfile';\r\nimport Utils from '../../services/Utils';\r\nimport './Comment.css';\r\nimport ToolTip from '../ToolTip';\r\nimport { useState } from 'react';\r\nimport PostService from '../../services/PostService';\r\nimport Input from '../Utils/Input';\r\n\r\nconst Comment = ({ comment }) => {\r\n\tconst [commentText, setCommentText] = useState(comment.comment);\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst [date, setDate] = useState(Utils.DateFormat(comment.lastModifiedDate));\r\n\tconst [commentStyle, setCommentStyle] = useState();\r\n\tconst lastText = comment.comment;\r\n\tconst deleteComment = () => {\r\n\t\tPostService.DeleteComment(comment._id).then((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\tsetCommentStyle({ display: 'none' });\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst editedComment = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsEditing(false);\r\n\t\tPostService.UpdateComment(comment._id, commentText);\r\n\t\tsetDate(Utils.DateFormat(Date()));\r\n\t};\r\n\r\n\tconst editComment = () => {\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\tconst cancelEdit = () => {\r\n\t\tsetCommentText(lastText);\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='card' style={commentStyle}>\r\n\t\t\t<div className='commentContent'>\r\n\t\t\t\t{isEditing ? (\r\n\t\t\t\t\t<form onSubmit={editedComment} className='editContainer'>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\twidth={'full'}\r\n\t\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\t\tgetInput={(e) => setCommentText(e)}\r\n\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\ttype={'textarea'}\r\n\t\t\t\t\t\t\tvalue={commentText}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className='editBtnsDiv'>\r\n\t\t\t\t\t\t\t<button className='cancel' type='button' onClick={cancelEdit}>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className='editBtn' type='submit'>\r\n\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='commentText'>\r\n\t\t\t\t\t\t<div className='content'>\r\n\t\t\t\t\t\t\t{commentText.split('\\n').map((text, i) => {\r\n\t\t\t\t\t\t\t\t//split every line in text to p\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<p style={{ margin: '2px' }} key={comment._id + i}>\r\n\t\t\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n\t\t\t\t\t\t\t<CardProfile profile={comment.ownerProfile}></CardProfile>\r\n\t\t\t\t\t\t\t<p className='date'>{date}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<ToolTip\r\n\t\t\t\t\tedit={editComment}\r\n\t\t\t\t\tdel={deleteComment}\r\n\t\t\t\t\tfrom={{ item: 'comment', itemId: comment._id, ownerId: comment.ownerId }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Comment;\r\n","import './TextPlaceHolder.css';\r\nconst TextPlaceHolder = ({ rows, color }) => {\r\n\tconst styleProps = { height: '20px', backgroundColor: color, margin: '5px', borderRadius: '5px' };\r\n\tlet skeleton = [];\r\n\tfor (let i = 0; i < rows; i++) {\r\n\t\tskeleton.push(<div style={styleProps} key={i}></div>);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='TextPlaceHolder' style={{ display: 'flex', flexDirection: 'column' }}>\r\n\t\t\t{skeleton}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TextPlaceHolder;\r\n","import { Link } from 'react-router-dom';\r\nimport './Tag.css';\r\n\r\nconst Tag = ({ tagName }) => {\r\n\treturn (\r\n\t\t<Link\r\n\t\t\tclassName={'tag'}\r\n\t\t\tto={{\r\n\t\t\t\tpathname: `/search`,\r\n\t\t\t\tstate:  tagName ,\r\n\t\t\t}}>\r\n\t\t\t{tagName}\r\n\t\t</Link>\r\n\t);\r\n};\r\n\r\nexport default Tag;\r\n","import Tag from './Tag';\r\nimport './Tags.css';\r\n\r\nconst Tags = ({ tags }) => {\r\n\treturn (\r\n\t\t<div className='tags'>\r\n\t\t\t<p style={{ fontSize: '12px'}}>tags:</p>\r\n\t\t\t<div className='tagsList'>\r\n\t\t\t\t{tags.map((tag, index) => (\r\n\t\t\t\t\t<Tag tagName={tag} key={`tag ${index}`} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tags;\r\n","import './PostView.css';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport AuthService from '../../services/AuthService';\r\nimport Vote from './Vote';\r\nimport CommentEditor from './CommentEditor';\r\nimport CardProfile from '../CardProfile/CardProfile';\r\nimport PostService from '../../services/PostService';\r\nimport Comment from './Comment';\r\nimport ToolTip from '../ToolTip';\r\nimport Loading from '../PlaceHolders/Loading';\r\nimport TextPlaceHolder from '../PlaceHolders/TextPlaceHolder';\r\nimport Utils from '../../services/Utils';\r\nimport Tags from './Tags';\r\n\r\nconst PostView = () => {\r\n\tconst location = useLocation();\r\n\tconst history = new useHistory();\r\n\tconst { id } = useParams();\r\n\r\n\tconst defaultPost = {\r\n\t\t_id: '',\r\n\t\townerId: ' ',\r\n\t\theader: ' ',\r\n\t\tbrief: ' ',\r\n\t\tdescription: ' ',\r\n\t\tvotesBalance: ' ',\r\n\t\tcommentsCount: ' ',\r\n\t\ttags: [' '],\r\n\t\tlastModifiedDate: ' ',\r\n\t\tcreationDate: ' ',\r\n\t\t__v: 0,\r\n\t};\r\n\r\n\tconst [firstCommentLoad, setFirstCommentLoad] = useState(false);\r\n\tconst [post, setPost] = useState(defaultPost);\r\n\tconst [author, setAuthor] = useState(null);\r\n\tconst [comments, setComments] = useState([]);\r\n\tconst [isLoadingPost, setIsLoadingPost] = useState(true);\r\n\tconst [loadingStyle, setLoadingStyle] = useState({\r\n\t\tdisplay: 'none',\r\n\t});\r\n\tconst [noMoreStyle, setNoMoreStyle] = useState({ display: 'none' });\r\n\tlet isFetching = false;\r\n\r\n\tconst editPost = () => {\r\n\t\twindow.sessionStorage.setItem('post', JSON.stringify(post));\r\n\t\thistory.push(`/editProject/`);\r\n\t};\r\n\r\n\tconst deletePost = () => {\r\n\t\tPostService.RemovePost(post._id).then((result) => {\r\n\t\t\tif (result) {\r\n\t\t\t\thistory.push('/');\r\n\t\t\t} else {\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadComments = () => {\r\n\t\tsetLoadingStyle({ display: 'inline-block' });\r\n\t\tPostService.GetComments(post._id, comments.length)\r\n\t\t\t.then((results) => {\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\tsetComments(comments.concat(results));\r\n\t\t\t\t\treturn (isFetching = false);\r\n\t\t\t\t}\r\n\t\t\t\tsetNoMoreStyle({ display: 'block', color: 'var(--quaternary-bg-color)' });\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetLoadingStyle({ display: 'none' });\r\n\t\t\t});\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tPostService.GetPostById(id || location.state?.post._id).then((updatedPost) => {\r\n\t\t\tsetPost(updatedPost[0]);\r\n\t\t\tsetIsLoadingPost(false);\r\n\t\t});\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\tuseEffect(() => {\r\n\t\tif (post.ownerId !== defaultPost.ownerId) {\r\n\t\t\tAuthService.FindProfile(post.ownerId).then((profile) => {\r\n\t\t\t\tsetAuthor(profile);\r\n\t\t\t});\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [post]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonScroll={(e) => {\r\n\t\t\t\tif (firstCommentLoad) {\r\n\t\t\t\t\tif (noMoreStyle.display === 'block') return;\r\n\t\t\t\t\tif (!isFetching) {\r\n\t\t\t\t\t\tconst bottom =\r\n\t\t\t\t\t\t\tMath.floor(e.target.scrollHeight - e.target.scrollTop - 1) <= e.target.clientHeight;\r\n\t\t\t\t\t\tif (bottom) {\r\n\t\t\t\t\t\t\tisFetching = true;\r\n\t\t\t\t\t\t\tloadComments();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tstyle={{ overflowY: 'auto', height: '93vh' }}>\r\n\t\t\t{id !== undefined || post ? (\r\n\t\t\t\t<div className='postView'>\r\n\t\t\t\t\t<div className='fullPost'>\r\n\t\t\t\t\t\t<div className='card'>\r\n\t\t\t\t\t\t\t{isLoadingPost === false ? (\r\n\t\t\t\t\t\t\t\t<div className='postContent'>\r\n\t\t\t\t\t\t\t\t\t<div className='postText'>\r\n\t\t\t\t\t\t\t\t\t\t<h2\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'var(--secondary-bg-color)',\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth:'80vw'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{post.header}\r\n\t\t\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t\t\t\t{post.brief.split('\\n').map((text, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t//split every line in text to p\r\n\t\t\t\t\t\t\t\t\t\t\treturn <p className={'briefP'} key={post._id + i} >{text}</p>;\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t{post.description.split('\\n').map((text, i) => {\r\n\t\t\t\t\t\t\t\t\t\t\t//split every line in text to p\r\n\t\t\t\t\t\t\t\t\t\t\treturn <p key={post._id + i}>{text}</p>;\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<ToolTip\r\n\t\t\t\t\t\t\t\t\t\tedit={editPost}\r\n\t\t\t\t\t\t\t\t\t\tdel={deletePost}\r\n\t\t\t\t\t\t\t\t\t\tfrom={{ item: 'post', itemId: post._id, ownerId: post.ownerId }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<TextPlaceHolder\r\n\t\t\t\t\t\t\t\t\trows={10}\r\n\t\t\t\t\t\t\t\t\theight={'20px'}\r\n\t\t\t\t\t\t\t\t\tcolor={'var(--tertiary-bg-color)'}></TextPlaceHolder>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<div className='lowerPost'>\r\n\t\t\t\t\t\t\t\t{author ? (\r\n\t\t\t\t\t\t\t\t\t<CardProfile profile={author} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName='card'\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\theight: '100px',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '200px',\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{post.ownerId !== defaultPost.ownerId && (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tflexDirection: 'row',\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<Tags tags={post.tags} header={'tags:'}/>\r\n\t\t\t\t\t\t\t\t\t\t<Vote post={post} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p>Last Modified: {Utils.DateFormat(post.lastModifiedDate)}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<CommentEditor post={post}></CommentEditor>\r\n\t\t\t\t\t\t{comments.length > 0 && // In case posts.length > 0\r\n\t\t\t\t\t\t\tcomments.map((comment) => {\r\n\t\t\t\t\t\t\t\treturn <Comment comment={comment} key={comment._id}></Comment>;\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<div className='loadingDiv' style={loadingStyle}>\r\n\t\t\t\t\t\t\t<Loading />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p style={noMoreStyle}>No more Comments</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t{!firstCommentLoad && (\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tloadComments();\r\n\t\t\t\t\t\t\t\t\tsetFirstCommentLoad(true);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tclassName='loadComments'>\r\n\t\t\t\t\t\t\t\tLoad comments\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<p>there is nothing to show</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PostView;\r\n","const About = () => {\r\n\treturn (\r\n\t\t<div className='About'>\r\n\t\t\t<p>About page</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","const ContactUs = () => {\r\n\treturn (\r\n\t\t<div className='ContactUs'>\r\n\t\t\t<p>Contact us</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ContactUs;\r\n","const NotFoundPage = () => {\r\n\treturn (\r\n\t\t<div className=\"notFound\">\r\n\t\t\t<h1 style={{color: 'var(--quaternary-bg-color)'}}>404</h1>\r\n\t\t\t<h3 style={{color: 'var(--quaternary-bg-color)'}}>There is no page like that</h3>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import Header from './components/Menus/Header'\r\nimport {\r\n\tBrowserRouter,\r\n\tRoute,\r\n\tSwitch,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\nimport Login from './components/Authentication/Login';\r\nimport Register from './components/Authentication/Register';\r\nimport Profile from './components/Authentication/Profile';\r\nimport PostForm from './components/Posts/PostForm';\r\nimport PostView from './components/Posts/PostView';\r\nimport About from './components/About';\r\nimport ContactUs from './components/ContactUs';\r\nimport Report from './components/Report';\r\nimport NotFoundPage from './components/404';\r\n\r\nfunction App() {\r\n\t\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t\t<Home/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/search'>\r\n\t\t\t\t\t\t<Home/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/login'>\r\n\t\t\t\t\t\t<Login/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/profile'>\r\n\t\t\t\t\t\t<Profile/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/register'>\r\n\t\t\t\t\t\t<Register/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/addProject'>\r\n\t\t\t\t\t\t<PostForm/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/editProject/'>\r\n\t\t\t\t\t\t<PostForm/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/report'>\r\n\t\t\t\t\t<Report/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/postView/:id'>\r\n\t\t\t\t\t\t<PostView/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/about'>\r\n\t\t\t\t\t\t<About/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/contactUs'>\r\n\t\t\t\t\t\t<ContactUs/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route>\r\n\t\t\t\t\t\t<NotFoundPage/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}